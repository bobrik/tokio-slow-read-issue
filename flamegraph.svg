<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="3107"><g><title>[unknown] (3 samples, 0.10%)</title><rect x="0.0000%" y="853" width="0.0966%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="863.50"></text></g><g><title>__GI___pthread_disable_asynccancel (3 samples, 0.10%)</title><rect x="0.0000%" y="837" width="0.0966%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="847.50"></text></g><g><title>__GI___pthread_disable_asynccancel (3 samples, 0.10%)</title><rect x="0.0000%" y="821" width="0.0966%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3"/><text x="0.2500%" y="831.50"></text></g><g><title>__GI___clock_gettime (9 samples, 0.29%)</title><rect x="0.0966%" y="853" width="0.2897%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="9"/><text x="0.3466%" y="863.50"></text></g><g><title>__kernel_clock_gettime (9 samples, 0.29%)</title><rect x="0.0966%" y="837" width="0.2897%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="9"/><text x="0.3466%" y="847.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="0.6759%" y="789" width="0.0322%" height="15" fill="rgb(232,128,0)" fg:x="21" fg:w="1"/><text x="0.9259%" y="799.50"></text></g><g><title>el0t_64_irq (1 samples, 0.03%)</title><rect x="0.7081%" y="789" width="0.0322%" height="15" fill="rgb(207,160,47)" fg:x="22" fg:w="1"/><text x="0.9581%" y="799.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.03%)</title><rect x="0.7081%" y="773" width="0.0322%" height="15" fill="rgb(228,23,34)" fg:x="22" fg:w="1"/><text x="0.9581%" y="783.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.03%)</title><rect x="0.7081%" y="757" width="0.0322%" height="15" fill="rgb(218,30,26)" fg:x="22" fg:w="1"/><text x="0.9581%" y="767.50"></text></g><g><title>el0_interrupt (1 samples, 0.03%)</title><rect x="0.7081%" y="741" width="0.0322%" height="15" fill="rgb(220,122,19)" fg:x="22" fg:w="1"/><text x="0.9581%" y="751.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="0.7081%" y="725" width="0.0322%" height="15" fill="rgb(250,228,42)" fg:x="22" fg:w="1"/><text x="0.9581%" y="735.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="0.7081%" y="709" width="0.0322%" height="15" fill="rgb(240,193,28)" fg:x="22" fg:w="1"/><text x="0.9581%" y="719.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.03%)</title><rect x="0.7081%" y="693" width="0.0322%" height="15" fill="rgb(216,20,37)" fg:x="22" fg:w="1"/><text x="0.9581%" y="703.50"></text></g><g><title>____do_softirq (1 samples, 0.03%)</title><rect x="0.7081%" y="677" width="0.0322%" height="15" fill="rgb(206,188,39)" fg:x="22" fg:w="1"/><text x="0.9581%" y="687.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="0.7081%" y="661" width="0.0322%" height="15" fill="rgb(217,207,13)" fg:x="22" fg:w="1"/><text x="0.9581%" y="671.50"></text></g><g><title>handle_softirqs (1 samples, 0.03%)</title><rect x="0.7081%" y="645" width="0.0322%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="1"/><text x="0.9581%" y="655.50"></text></g><g><title>__fdget_pos (2 samples, 0.06%)</title><rect x="1.0299%" y="693" width="0.0644%" height="15" fill="rgb(225,20,46)" fg:x="32" fg:w="2"/><text x="1.2799%" y="703.50"></text></g><g><title>__fdget_pos (2 samples, 0.06%)</title><rect x="1.0943%" y="677" width="0.0644%" height="15" fill="rgb(210,31,41)" fg:x="34" fg:w="2"/><text x="1.3443%" y="687.50"></text></g><g><title>__fget_light (2 samples, 0.06%)</title><rect x="1.0943%" y="661" width="0.0644%" height="15" fill="rgb(221,200,47)" fg:x="34" fg:w="2"/><text x="1.3443%" y="671.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="1.1587%" y="677" width="0.0322%" height="15" fill="rgb(226,26,5)" fg:x="36" fg:w="1"/><text x="1.4087%" y="687.50"></text></g><g><title>fput (1 samples, 0.03%)</title><rect x="1.1909%" y="677" width="0.0322%" height="15" fill="rgb(249,33,26)" fg:x="37" fg:w="1"/><text x="1.4409%" y="687.50"></text></g><g><title>rw_verify_area (1 samples, 0.03%)</title><rect x="1.2230%" y="677" width="0.0322%" height="15" fill="rgb(235,183,28)" fg:x="38" fg:w="1"/><text x="1.4730%" y="687.50"></text></g><g><title>__arch_clear_user (524 samples, 16.87%)</title><rect x="1.2552%" y="661" width="16.8651%" height="15" fill="rgb(221,5,38)" fg:x="39" fg:w="524"/><text x="1.5052%" y="671.50">__arch_clear_user</text></g><g><title>el1h_64_irq (2 samples, 0.06%)</title><rect x="18.0560%" y="645" width="0.0644%" height="15" fill="rgb(247,18,42)" fg:x="561" fg:w="2"/><text x="18.3060%" y="655.50"></text></g><g><title>el1h_64_irq_handler (2 samples, 0.06%)</title><rect x="18.0560%" y="629" width="0.0644%" height="15" fill="rgb(241,131,45)" fg:x="561" fg:w="2"/><text x="18.3060%" y="639.50"></text></g><g><title>el1_interrupt (2 samples, 0.06%)</title><rect x="18.0560%" y="613" width="0.0644%" height="15" fill="rgb(249,31,29)" fg:x="561" fg:w="2"/><text x="18.3060%" y="623.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.06%)</title><rect x="18.0560%" y="597" width="0.0644%" height="15" fill="rgb(225,111,53)" fg:x="561" fg:w="2"/><text x="18.3060%" y="607.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.06%)</title><rect x="18.0560%" y="581" width="0.0644%" height="15" fill="rgb(238,160,17)" fg:x="561" fg:w="2"/><text x="18.3060%" y="591.50"></text></g><g><title>call_on_irq_stack (2 samples, 0.06%)</title><rect x="18.0560%" y="565" width="0.0644%" height="15" fill="rgb(214,148,48)" fg:x="561" fg:w="2"/><text x="18.3060%" y="575.50"></text></g><g><title>____do_softirq (2 samples, 0.06%)</title><rect x="18.0560%" y="549" width="0.0644%" height="15" fill="rgb(232,36,49)" fg:x="561" fg:w="2"/><text x="18.3060%" y="559.50"></text></g><g><title>__do_softirq (2 samples, 0.06%)</title><rect x="18.0560%" y="533" width="0.0644%" height="15" fill="rgb(209,103,24)" fg:x="561" fg:w="2"/><text x="18.3060%" y="543.50"></text></g><g><title>handle_softirqs (2 samples, 0.06%)</title><rect x="18.0560%" y="517" width="0.0644%" height="15" fill="rgb(229,88,8)" fg:x="561" fg:w="2"/><text x="18.3060%" y="527.50"></text></g><g><title>read_zero (15 samples, 0.48%)</title><rect x="18.1204%" y="661" width="0.4828%" height="15" fill="rgb(213,181,19)" fg:x="563" fg:w="15"/><text x="18.3704%" y="671.50"></text></g><g><title>__cond_resched (8 samples, 0.26%)</title><rect x="18.3457%" y="645" width="0.2575%" height="15" fill="rgb(254,191,54)" fg:x="570" fg:w="8"/><text x="18.5957%" y="655.50"></text></g><g><title>rcu_all_qs (7 samples, 0.23%)</title><rect x="18.3779%" y="629" width="0.2253%" height="15" fill="rgb(241,83,37)" fg:x="571" fg:w="7"/><text x="18.6279%" y="639.50"></text></g><g><title>security_file_permission (5 samples, 0.16%)</title><rect x="18.6032%" y="645" width="0.1609%" height="15" fill="rgb(233,36,39)" fg:x="578" fg:w="5"/><text x="18.8532%" y="655.50"></text></g><g><title>avc_policy_seqno (5 samples, 0.16%)</title><rect x="18.6032%" y="629" width="0.1609%" height="15" fill="rgb(226,3,54)" fg:x="578" fg:w="5"/><text x="18.8532%" y="639.50"></text></g><g><title>rw_verify_area (6 samples, 0.19%)</title><rect x="18.6032%" y="661" width="0.1931%" height="15" fill="rgb(245,192,40)" fg:x="578" fg:w="6"/><text x="18.8532%" y="671.50"></text></g><g><title>selinux_file_permission (1 samples, 0.03%)</title><rect x="18.7641%" y="645" width="0.0322%" height="15" fill="rgb(238,167,29)" fg:x="583" fg:w="1"/><text x="19.0141%" y="655.50"></text></g><g><title>__GI___libc_read (573 samples, 18.44%)</title><rect x="0.3862%" y="853" width="18.4422%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="573"/><text x="0.6362%" y="863.50">__GI___libc_read</text></g><g><title>__GI___libc_read (573 samples, 18.44%)</title><rect x="0.3862%" y="837" width="18.4422%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="573"/><text x="0.6362%" y="847.50">__GI___libc_read</text></g><g><title>__GI___libc_read (573 samples, 18.44%)</title><rect x="0.3862%" y="821" width="18.4422%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="573"/><text x="0.6362%" y="831.50">__GI___libc_read</text></g><g><title>__GI___libc_read (573 samples, 18.44%)</title><rect x="0.3862%" y="805" width="18.4422%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="573"/><text x="0.6362%" y="815.50">__GI___libc_read</text></g><g><title>el0t_64_sync (562 samples, 18.09%)</title><rect x="0.7403%" y="789" width="18.0882%" height="15" fill="rgb(213,116,39)" fg:x="23" fg:w="562"/><text x="0.9903%" y="799.50">el0t_64_sync</text></g><g><title>el0t_64_sync_handler (562 samples, 18.09%)</title><rect x="0.7403%" y="773" width="18.0882%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="562"/><text x="0.9903%" y="783.50">el0t_64_sync_handler</text></g><g><title>el0_svc (562 samples, 18.09%)</title><rect x="0.7403%" y="757" width="18.0882%" height="15" fill="rgb(206,96,30)" fg:x="23" fg:w="562"/><text x="0.9903%" y="767.50">el0_svc</text></g><g><title>do_el0_svc (553 samples, 17.80%)</title><rect x="1.0299%" y="741" width="17.7985%" height="15" fill="rgb(218,138,4)" fg:x="32" fg:w="553"/><text x="1.2799%" y="751.50">do_el0_svc</text></g><g><title>invoke_syscall.constprop.0 (553 samples, 17.80%)</title><rect x="1.0299%" y="725" width="17.7985%" height="15" fill="rgb(250,191,14)" fg:x="32" fg:w="553"/><text x="1.2799%" y="735.50">invoke_syscall.constprop.0</text></g><g><title>__arm64_sys_read (553 samples, 17.80%)</title><rect x="1.0299%" y="709" width="17.7985%" height="15" fill="rgb(239,60,40)" fg:x="32" fg:w="553"/><text x="1.2799%" y="719.50">__arm64_sys_read</text></g><g><title>ksys_read (551 samples, 17.73%)</title><rect x="1.0943%" y="693" width="17.7341%" height="15" fill="rgb(206,27,48)" fg:x="34" fg:w="551"/><text x="1.3443%" y="703.50">ksys_read</text></g><g><title>vfs_read (546 samples, 17.57%)</title><rect x="1.2552%" y="677" width="17.5732%" height="15" fill="rgb(225,35,8)" fg:x="39" fg:w="546"/><text x="1.5052%" y="687.50">vfs_read</text></g><g><title>security_file_permission (1 samples, 0.03%)</title><rect x="18.7963%" y="661" width="0.0322%" height="15" fill="rgb(250,213,24)" fg:x="584" fg:w="1"/><text x="19.0463%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (2 samples, 0.06%)</title><rect x="18.8285%" y="613" width="0.0644%" height="15" fill="rgb(247,123,22)" fg:x="585" fg:w="2"/><text x="19.0785%" y="623.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (2 samples, 0.06%)</title><rect x="18.8285%" y="597" width="0.0644%" height="15" fill="rgb(231,138,38)" fg:x="585" fg:w="2"/><text x="19.0785%" y="607.50"></text></g><g><title>core::mem::drop (2 samples, 0.06%)</title><rect x="18.8928%" y="613" width="0.0644%" height="15" fill="rgb(231,145,46)" fg:x="587" fg:w="2"/><text x="19.1428%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (2 samples, 0.06%)</title><rect x="18.8928%" y="597" width="0.0644%" height="15" fill="rgb(251,118,11)" fg:x="587" fg:w="2"/><text x="19.1428%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="18.8928%" y="581" width="0.0644%" height="15" fill="rgb(217,147,25)" fg:x="587" fg:w="2"/><text x="19.1428%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (2 samples, 0.06%)</title><rect x="18.8928%" y="565" width="0.0644%" height="15" fill="rgb(247,81,37)" fg:x="587" fg:w="2"/><text x="19.1428%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.03%)</title><rect x="18.9250%" y="549" width="0.0322%" height="15" fill="rgb(209,12,38)" fg:x="588" fg:w="1"/><text x="19.1750%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.03%)</title><rect x="18.9250%" y="533" width="0.0322%" height="15" fill="rgb(227,1,9)" fg:x="588" fg:w="1"/><text x="19.1750%" y="543.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.03%)</title><rect x="18.9250%" y="517" width="0.0322%" height="15" fill="rgb(248,47,43)" fg:x="588" fg:w="1"/><text x="19.1750%" y="527.50"></text></g><g><title>std::sync::poison::Flag::get (2 samples, 0.06%)</title><rect x="18.9572%" y="597" width="0.0644%" height="15" fill="rgb(221,10,30)" fg:x="589" fg:w="2"/><text x="19.2072%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.06%)</title><rect x="18.9572%" y="581" width="0.0644%" height="15" fill="rgb(210,229,1)" fg:x="589" fg:w="2"/><text x="19.2072%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.06%)</title><rect x="18.9572%" y="565" width="0.0644%" height="15" fill="rgb(222,148,37)" fg:x="589" fg:w="2"/><text x="19.2072%" y="575.50"></text></g><g><title>el0t_64_irq (1 samples, 0.03%)</title><rect x="18.9894%" y="549" width="0.0322%" height="15" fill="rgb(234,67,33)" fg:x="590" fg:w="1"/><text x="19.2394%" y="559.50"></text></g><g><title>el0t_64_irq_handler (1 samples, 0.03%)</title><rect x="18.9894%" y="533" width="0.0322%" height="15" fill="rgb(247,98,35)" fg:x="590" fg:w="1"/><text x="19.2394%" y="543.50"></text></g><g><title>__el0_irq_handler_common (1 samples, 0.03%)</title><rect x="18.9894%" y="517" width="0.0322%" height="15" fill="rgb(247,138,52)" fg:x="590" fg:w="1"/><text x="19.2394%" y="527.50"></text></g><g><title>el0_interrupt (1 samples, 0.03%)</title><rect x="18.9894%" y="501" width="0.0322%" height="15" fill="rgb(213,79,30)" fg:x="590" fg:w="1"/><text x="19.2394%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="18.9894%" y="485" width="0.0322%" height="15" fill="rgb(246,177,23)" fg:x="590" fg:w="1"/><text x="19.2394%" y="495.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="18.9894%" y="469" width="0.0322%" height="15" fill="rgb(230,62,27)" fg:x="590" fg:w="1"/><text x="19.2394%" y="479.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.03%)</title><rect x="18.9894%" y="453" width="0.0322%" height="15" fill="rgb(216,154,8)" fg:x="590" fg:w="1"/><text x="19.2394%" y="463.50"></text></g><g><title>____do_softirq (1 samples, 0.03%)</title><rect x="18.9894%" y="437" width="0.0322%" height="15" fill="rgb(244,35,45)" fg:x="590" fg:w="1"/><text x="19.2394%" y="447.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="18.9894%" y="421" width="0.0322%" height="15" fill="rgb(251,115,12)" fg:x="590" fg:w="1"/><text x="19.2394%" y="431.50"></text></g><g><title>handle_softirqs (1 samples, 0.03%)</title><rect x="18.9894%" y="405" width="0.0322%" height="15" fill="rgb(240,54,50)" fg:x="590" fg:w="1"/><text x="19.2394%" y="415.50"></text></g><g><title>sched_balance_softirq (1 samples, 0.03%)</title><rect x="18.9894%" y="389" width="0.0322%" height="15" fill="rgb(233,84,52)" fg:x="590" fg:w="1"/><text x="19.2394%" y="399.50"></text></g><g><title>sched_balance_domains (1 samples, 0.03%)</title><rect x="18.9894%" y="373" width="0.0322%" height="15" fill="rgb(207,117,47)" fg:x="590" fg:w="1"/><text x="19.2394%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.13%)</title><rect x="19.0216%" y="549" width="0.1287%" height="15" fill="rgb(249,43,39)" fg:x="591" fg:w="4"/><text x="19.2716%" y="559.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait::_{{closure}} (4 samples, 0.13%)</title><rect x="19.0216%" y="533" width="0.1287%" height="15" fill="rgb(209,38,44)" fg:x="591" fg:w="4"/><text x="19.2716%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4 samples, 0.13%)</title><rect x="19.0216%" y="517" width="0.1287%" height="15" fill="rgb(236,212,23)" fg:x="591" fg:w="4"/><text x="19.2716%" y="527.50"></text></g><g><title>__GI___clock_gettime (4 samples, 0.13%)</title><rect x="19.0216%" y="501" width="0.1287%" height="15" fill="rgb(242,79,21)" fg:x="591" fg:w="4"/><text x="19.2716%" y="511.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.03%)</title><rect x="19.3756%" y="485" width="0.0322%" height="15" fill="rgb(211,96,35)" fg:x="602" fg:w="1"/><text x="19.6256%" y="495.50"></text></g><g><title>__futex_wait (1 samples, 0.03%)</title><rect x="19.4400%" y="421" width="0.0322%" height="15" fill="rgb(253,215,40)" fg:x="604" fg:w="1"/><text x="19.6900%" y="431.50"></text></g><g><title>futex_get_value_locked (1 samples, 0.03%)</title><rect x="19.4722%" y="389" width="0.0322%" height="15" fill="rgb(211,81,21)" fg:x="605" fg:w="1"/><text x="19.7222%" y="399.50"></text></g><g><title>__futex_wait (3 samples, 0.10%)</title><rect x="19.4722%" y="405" width="0.0966%" height="15" fill="rgb(208,190,38)" fg:x="605" fg:w="3"/><text x="19.7222%" y="415.50"></text></g><g><title>futex_wait_queue (2 samples, 0.06%)</title><rect x="19.5043%" y="389" width="0.0644%" height="15" fill="rgb(235,213,38)" fg:x="606" fg:w="2"/><text x="19.7543%" y="399.50"></text></g><g><title>__futex_queue (1 samples, 0.03%)</title><rect x="19.5365%" y="373" width="0.0322%" height="15" fill="rgb(237,122,38)" fg:x="607" fg:w="1"/><text x="19.7865%" y="383.50"></text></g><g><title>do_futex (6 samples, 0.19%)</title><rect x="19.4400%" y="437" width="0.1931%" height="15" fill="rgb(244,218,35)" fg:x="604" fg:w="6"/><text x="19.6900%" y="447.50"></text></g><g><title>futex_wait (5 samples, 0.16%)</title><rect x="19.4722%" y="421" width="0.1609%" height="15" fill="rgb(240,68,47)" fg:x="605" fg:w="5"/><text x="19.7222%" y="431.50"></text></g><g><title>futex_setup_timer (2 samples, 0.06%)</title><rect x="19.5687%" y="405" width="0.0644%" height="15" fill="rgb(210,16,53)" fg:x="608" fg:w="2"/><text x="19.8187%" y="415.50"></text></g><g><title>hrtimer_init_sleeper (2 samples, 0.06%)</title><rect x="19.5687%" y="389" width="0.0644%" height="15" fill="rgb(235,124,12)" fg:x="608" fg:w="2"/><text x="19.8187%" y="399.50"></text></g><g><title>__memset (1 samples, 0.03%)</title><rect x="19.6009%" y="373" width="0.0322%" height="15" fill="rgb(224,169,11)" fg:x="609" fg:w="1"/><text x="19.8509%" y="383.50"></text></g><g><title>__arm64_sys_futex (8 samples, 0.26%)</title><rect x="19.4400%" y="453" width="0.2575%" height="15" fill="rgb(250,166,2)" fg:x="604" fg:w="8"/><text x="19.6900%" y="463.50"></text></g><g><title>futex_wait (2 samples, 0.06%)</title><rect x="19.6331%" y="437" width="0.0644%" height="15" fill="rgb(242,216,29)" fg:x="610" fg:w="2"/><text x="19.8831%" y="447.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (23 samples, 0.74%)</title><rect x="19.0216%" y="565" width="0.7403%" height="15" fill="rgb(230,116,27)" fg:x="591" fg:w="23"/><text x="19.2716%" y="575.50"></text></g><g><title>syscall (19 samples, 0.61%)</title><rect x="19.1503%" y="549" width="0.6115%" height="15" fill="rgb(228,99,48)" fg:x="595" fg:w="19"/><text x="19.4003%" y="559.50"></text></g><g><title>el0t_64_sync (17 samples, 0.55%)</title><rect x="19.2147%" y="533" width="0.5472%" height="15" fill="rgb(253,11,6)" fg:x="597" fg:w="17"/><text x="19.4647%" y="543.50"></text></g><g><title>el0t_64_sync_handler (17 samples, 0.55%)</title><rect x="19.2147%" y="517" width="0.5472%" height="15" fill="rgb(247,143,39)" fg:x="597" fg:w="17"/><text x="19.4647%" y="527.50"></text></g><g><title>el0_svc (17 samples, 0.55%)</title><rect x="19.2147%" y="501" width="0.5472%" height="15" fill="rgb(236,97,10)" fg:x="597" fg:w="17"/><text x="19.4647%" y="511.50"></text></g><g><title>do_el0_svc (11 samples, 0.35%)</title><rect x="19.4078%" y="485" width="0.3540%" height="15" fill="rgb(233,208,19)" fg:x="603" fg:w="11"/><text x="19.6578%" y="495.50"></text></g><g><title>invoke_syscall.constprop.0 (11 samples, 0.35%)</title><rect x="19.4078%" y="469" width="0.3540%" height="15" fill="rgb(216,164,2)" fg:x="603" fg:w="11"/><text x="19.6578%" y="479.50"></text></g><g><title>get_timespec64 (2 samples, 0.06%)</title><rect x="19.6975%" y="453" width="0.0644%" height="15" fill="rgb(220,129,5)" fg:x="612" fg:w="2"/><text x="19.9475%" y="463.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (26 samples, 0.84%)</title><rect x="18.9572%" y="613" width="0.8368%" height="15" fill="rgb(242,17,10)" fg:x="589" fg:w="26"/><text x="19.2072%" y="623.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (24 samples, 0.77%)</title><rect x="19.0216%" y="597" width="0.7724%" height="15" fill="rgb(242,107,0)" fg:x="591" fg:w="24"/><text x="19.2716%" y="607.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (24 samples, 0.77%)</title><rect x="19.0216%" y="581" width="0.7724%" height="15" fill="rgb(251,28,31)" fg:x="591" fg:w="24"/><text x="19.2716%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.03%)</title><rect x="19.7618%" y="565" width="0.0322%" height="15" fill="rgb(233,223,10)" fg:x="614" fg:w="1"/><text x="20.0118%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.03%)</title><rect x="19.7618%" y="549" width="0.0322%" height="15" fill="rgb(215,21,27)" fg:x="614" fg:w="1"/><text x="20.0118%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="19.7618%" y="533" width="0.0322%" height="15" fill="rgb(232,23,21)" fg:x="614" fg:w="1"/><text x="20.0118%" y="543.50"></text></g><g><title>__aarch64_cas4_acq (1 samples, 0.03%)</title><rect x="19.7618%" y="517" width="0.0322%" height="15" fill="rgb(244,5,23)" fg:x="614" fg:w="1"/><text x="20.0118%" y="527.50"></text></g><g><title>tokio::runtime::blocking::pool::SpawnerMetrics::dec_queue_depth (2 samples, 0.06%)</title><rect x="19.7940%" y="613" width="0.0644%" height="15" fill="rgb(226,81,46)" fg:x="615" fg:w="2"/><text x="20.0440%" y="623.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicUsize::decrement (2 samples, 0.06%)</title><rect x="19.7940%" y="597" width="0.0644%" height="15" fill="rgb(247,70,30)" fg:x="615" fg:w="2"/><text x="20.0440%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.06%)</title><rect x="19.7940%" y="581" width="0.0644%" height="15" fill="rgb(212,68,19)" fg:x="615" fg:w="2"/><text x="20.0440%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.06%)</title><rect x="19.7940%" y="565" width="0.0644%" height="15" fill="rgb(240,187,13)" fg:x="615" fg:w="2"/><text x="20.0440%" y="575.50"></text></g><g><title>__aarch64_ldadd8_relax (2 samples, 0.06%)</title><rect x="19.7940%" y="549" width="0.0644%" height="15" fill="rgb(223,113,26)" fg:x="615" fg:w="2"/><text x="20.0440%" y="559.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (2 samples, 0.06%)</title><rect x="20.2446%" y="373" width="0.0644%" height="15" fill="rgb(206,192,2)" fg:x="629" fg:w="2"/><text x="20.4946%" y="383.50"></text></g><g><title>futex_hash (1 samples, 0.03%)</title><rect x="20.5021%" y="245" width="0.0322%" height="15" fill="rgb(241,108,4)" fg:x="637" fg:w="1"/><text x="20.7521%" y="255.50"></text></g><g><title>__futex_unqueue (1 samples, 0.03%)</title><rect x="20.5343%" y="197" width="0.0322%" height="15" fill="rgb(247,173,49)" fg:x="638" fg:w="1"/><text x="20.7843%" y="207.50"></text></g><g><title>plist_del (1 samples, 0.03%)</title><rect x="20.5343%" y="181" width="0.0322%" height="15" fill="rgb(224,114,35)" fg:x="638" fg:w="1"/><text x="20.7843%" y="191.50"></text></g><g><title>futex_wake_mark (2 samples, 0.06%)</title><rect x="20.5343%" y="229" width="0.0644%" height="15" fill="rgb(245,159,27)" fg:x="638" fg:w="2"/><text x="20.7843%" y="239.50"></text></g><g><title>__futex_wake_mark (2 samples, 0.06%)</title><rect x="20.5343%" y="213" width="0.0644%" height="15" fill="rgb(245,172,44)" fg:x="638" fg:w="2"/><text x="20.7843%" y="223.50"></text></g><g><title>plist_del (1 samples, 0.03%)</title><rect x="20.5665%" y="197" width="0.0322%" height="15" fill="rgb(236,23,11)" fg:x="639" fg:w="1"/><text x="20.8165%" y="207.50"></text></g><g><title>get_futex_key (1 samples, 0.03%)</title><rect x="20.5986%" y="229" width="0.0322%" height="15" fill="rgb(205,117,38)" fg:x="640" fg:w="1"/><text x="20.8486%" y="239.50"></text></g><g><title>try_to_wake_up (1 samples, 0.03%)</title><rect x="20.6308%" y="229" width="0.0322%" height="15" fill="rgb(237,72,25)" fg:x="641" fg:w="1"/><text x="20.8808%" y="239.50"></text></g><g><title>rcu_core_si (1 samples, 0.03%)</title><rect x="31.0267%" y="69" width="0.0322%" height="15" fill="rgb(244,70,9)" fg:x="964" fg:w="1"/><text x="31.2767%" y="79.50"></text></g><g><title>rcu_core (1 samples, 0.03%)</title><rect x="31.0267%" y="53" width="0.0322%" height="15" fill="rgb(217,125,39)" fg:x="964" fg:w="1"/><text x="31.2767%" y="63.50"></text></g><g><title>el1h_64_irq (2 samples, 0.06%)</title><rect x="31.0267%" y="213" width="0.0644%" height="15" fill="rgb(235,36,10)" fg:x="964" fg:w="2"/><text x="31.2767%" y="223.50"></text></g><g><title>el1h_64_irq_handler (2 samples, 0.06%)</title><rect x="31.0267%" y="197" width="0.0644%" height="15" fill="rgb(251,123,47)" fg:x="964" fg:w="2"/><text x="31.2767%" y="207.50"></text></g><g><title>el1_interrupt (2 samples, 0.06%)</title><rect x="31.0267%" y="181" width="0.0644%" height="15" fill="rgb(221,13,13)" fg:x="964" fg:w="2"/><text x="31.2767%" y="191.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.06%)</title><rect x="31.0267%" y="165" width="0.0644%" height="15" fill="rgb(238,131,9)" fg:x="964" fg:w="2"/><text x="31.2767%" y="175.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.06%)</title><rect x="31.0267%" y="149" width="0.0644%" height="15" fill="rgb(211,50,8)" fg:x="964" fg:w="2"/><text x="31.2767%" y="159.50"></text></g><g><title>call_on_irq_stack (2 samples, 0.06%)</title><rect x="31.0267%" y="133" width="0.0644%" height="15" fill="rgb(245,182,24)" fg:x="964" fg:w="2"/><text x="31.2767%" y="143.50"></text></g><g><title>____do_softirq (2 samples, 0.06%)</title><rect x="31.0267%" y="117" width="0.0644%" height="15" fill="rgb(242,14,37)" fg:x="964" fg:w="2"/><text x="31.2767%" y="127.50"></text></g><g><title>__do_softirq (2 samples, 0.06%)</title><rect x="31.0267%" y="101" width="0.0644%" height="15" fill="rgb(246,228,12)" fg:x="964" fg:w="2"/><text x="31.2767%" y="111.50"></text></g><g><title>handle_softirqs (2 samples, 0.06%)</title><rect x="31.0267%" y="85" width="0.0644%" height="15" fill="rgb(213,55,15)" fg:x="964" fg:w="2"/><text x="31.2767%" y="95.50"></text></g><g><title>sched_balance_softirq (1 samples, 0.03%)</title><rect x="31.0589%" y="69" width="0.0322%" height="15" fill="rgb(209,9,3)" fg:x="965" fg:w="1"/><text x="31.3089%" y="79.50"></text></g><g><title>sched_balance_domains (1 samples, 0.03%)</title><rect x="31.0589%" y="53" width="0.0322%" height="15" fill="rgb(230,59,30)" fg:x="965" fg:w="1"/><text x="31.3089%" y="63.50"></text></g><g><title>do_futex (338 samples, 10.88%)</title><rect x="20.5021%" y="261" width="10.8787%" height="15" fill="rgb(209,121,21)" fg:x="637" fg:w="338"/><text x="20.7521%" y="271.50">do_futex</text></g><g><title>futex_wake (337 samples, 10.85%)</title><rect x="20.5343%" y="245" width="10.8465%" height="15" fill="rgb(220,109,13)" fg:x="638" fg:w="337"/><text x="20.7843%" y="255.50">futex_wake</text></g><g><title>wake_up_q (333 samples, 10.72%)</title><rect x="20.6630%" y="229" width="10.7177%" height="15" fill="rgb(232,18,1)" fg:x="642" fg:w="333"/><text x="20.9130%" y="239.50">wake_up_q</text></g><g><title>try_to_wake_up (9 samples, 0.29%)</title><rect x="31.0911%" y="213" width="0.2897%" height="15" fill="rgb(215,41,42)" fg:x="966" fg:w="9"/><text x="31.3411%" y="223.50"></text></g><g><title>syscall (346 samples, 11.14%)</title><rect x="20.3090%" y="373" width="11.1361%" height="15" fill="rgb(224,123,36)" fg:x="631" fg:w="346"/><text x="20.5590%" y="383.50">syscall</text></g><g><title>el0t_64_sync (344 samples, 11.07%)</title><rect x="20.3734%" y="357" width="11.0718%" height="15" fill="rgb(240,125,3)" fg:x="633" fg:w="344"/><text x="20.6234%" y="367.50">el0t_64_sync</text></g><g><title>el0t_64_sync_handler (344 samples, 11.07%)</title><rect x="20.3734%" y="341" width="11.0718%" height="15" fill="rgb(205,98,50)" fg:x="633" fg:w="344"/><text x="20.6234%" y="351.50">el0t_64_sync_han..</text></g><g><title>el0_svc (344 samples, 11.07%)</title><rect x="20.3734%" y="325" width="11.0718%" height="15" fill="rgb(205,185,37)" fg:x="633" fg:w="344"/><text x="20.6234%" y="335.50">el0_svc</text></g><g><title>do_el0_svc (341 samples, 10.98%)</title><rect x="20.4699%" y="309" width="10.9752%" height="15" fill="rgb(238,207,15)" fg:x="636" fg:w="341"/><text x="20.7199%" y="319.50">do_el0_svc</text></g><g><title>invoke_syscall.constprop.0 (341 samples, 10.98%)</title><rect x="20.4699%" y="293" width="10.9752%" height="15" fill="rgb(213,199,42)" fg:x="636" fg:w="341"/><text x="20.7199%" y="303.50">invoke_syscall.c..</text></g><g><title>__arm64_sys_futex (340 samples, 10.94%)</title><rect x="20.5021%" y="277" width="10.9430%" height="15" fill="rgb(235,201,11)" fg:x="637" fg:w="340"/><text x="20.7521%" y="287.50">__arm64_sys_futex</text></g><g><title>futex_wake (2 samples, 0.06%)</title><rect x="31.3808%" y="261" width="0.0644%" height="15" fill="rgb(207,46,11)" fg:x="975" fg:w="2"/><text x="31.6308%" y="271.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.03%)</title><rect x="31.4451%" y="373" width="0.0322%" height="15" fill="rgb(241,35,35)" fg:x="977" fg:w="1"/><text x="31.6951%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (351 samples, 11.30%)</title><rect x="20.2446%" y="549" width="11.2971%" height="15" fill="rgb(243,32,47)" fg:x="629" fg:w="351"/><text x="20.4946%" y="559.50">tokio::runtime::t..</text></g><g><title>std::panic::catch_unwind (351 samples, 11.30%)</title><rect x="20.2446%" y="533" width="11.2971%" height="15" fill="rgb(247,202,23)" fg:x="629" fg:w="351"/><text x="20.4946%" y="543.50">std::panic::catch..</text></g><g><title>std::panicking::try (351 samples, 11.30%)</title><rect x="20.2446%" y="517" width="11.2971%" height="15" fill="rgb(219,102,11)" fg:x="629" fg:w="351"/><text x="20.4946%" y="527.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (351 samples, 11.30%)</title><rect x="20.2446%" y="501" width="11.2971%" height="15" fill="rgb(243,110,44)" fg:x="629" fg:w="351"/><text x="20.4946%" y="511.50">std::panicking::t..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (351 samples, 11.30%)</title><rect x="20.2446%" y="485" width="11.2971%" height="15" fill="rgb(222,74,54)" fg:x="629" fg:w="351"/><text x="20.4946%" y="495.50">&lt;core::panic::unw..</text></g><g><title>core::ops::function::FnOnce::call_once (351 samples, 11.30%)</title><rect x="20.2446%" y="469" width="11.2971%" height="15" fill="rgb(216,99,12)" fg:x="629" fg:w="351"/><text x="20.4946%" y="479.50">core::ops::functi..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::_{{closure}} (351 samples, 11.30%)</title><rect x="20.2446%" y="453" width="11.2971%" height="15" fill="rgb(226,22,26)" fg:x="629" fg:w="351"/><text x="20.4946%" y="463.50">tokio::runtime::t..</text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (351 samples, 11.30%)</title><rect x="20.2446%" y="437" width="11.2971%" height="15" fill="rgb(217,163,10)" fg:x="629" fg:w="351"/><text x="20.4946%" y="447.50">tokio::runtime::t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (351 samples, 11.30%)</title><rect x="20.2446%" y="421" width="11.2971%" height="15" fill="rgb(213,25,53)" fg:x="629" fg:w="351"/><text x="20.4946%" y="431.50">tokio::loom::std:..</text></g><g><title>tokio::runtime::task::core::Trailer::wake_join::_{{closure}} (351 samples, 11.30%)</title><rect x="20.2446%" y="405" width="11.2971%" height="15" fill="rgb(252,105,26)" fg:x="629" fg:w="351"/><text x="20.4946%" y="415.50">tokio::runtime::t..</text></g><g><title>core::task::wake::Waker::wake_by_ref (351 samples, 11.30%)</title><rect x="20.2446%" y="389" width="11.2971%" height="15" fill="rgb(220,39,43)" fg:x="629" fg:w="351"/><text x="20.4946%" y="399.50">core::task::wake:..</text></g><g><title>tokio::util::wake::wake_by_ref_arc_raw (2 samples, 0.06%)</title><rect x="31.4773%" y="373" width="0.0644%" height="15" fill="rgb(229,68,48)" fg:x="978" fg:w="2"/><text x="31.7273%" y="383.50"></text></g><g><title>__GI___libc_read (4 samples, 0.13%)</title><rect x="32.0245%" y="293" width="0.1287%" height="15" fill="rgb(252,8,32)" fg:x="995" fg:w="4"/><text x="32.2745%" y="303.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.61%)</title><rect x="31.6061%" y="389" width="0.6115%" height="15" fill="rgb(223,20,43)" fg:x="982" fg:w="19"/><text x="31.8561%" y="399.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read::_{{closure}} (7 samples, 0.23%)</title><rect x="31.9923%" y="373" width="0.2253%" height="15" fill="rgb(229,81,49)" fg:x="994" fg:w="7"/><text x="32.2423%" y="383.50"></text></g><g><title>tokio::io::blocking::Buf::read_from (7 samples, 0.23%)</title><rect x="31.9923%" y="357" width="0.2253%" height="15" fill="rgb(236,28,36)" fg:x="994" fg:w="7"/><text x="32.2423%" y="367.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (7 samples, 0.23%)</title><rect x="31.9923%" y="341" width="0.2253%" height="15" fill="rgb(249,185,26)" fg:x="994" fg:w="7"/><text x="32.2423%" y="351.50"></text></g><g><title>std::sys::pal::unix::fs::File::read (7 samples, 0.23%)</title><rect x="31.9923%" y="325" width="0.2253%" height="15" fill="rgb(249,174,33)" fg:x="994" fg:w="7"/><text x="32.2423%" y="335.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read (6 samples, 0.19%)</title><rect x="32.0245%" y="309" width="0.1931%" height="15" fill="rgb(233,201,37)" fg:x="995" fg:w="6"/><text x="32.2745%" y="319.50"></text></g><g><title>read@plt (2 samples, 0.06%)</title><rect x="32.1532%" y="293" width="0.0644%" height="15" fill="rgb(221,78,26)" fg:x="999" fg:w="2"/><text x="32.4032%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (23 samples, 0.74%)</title><rect x="31.5417%" y="533" width="0.7403%" height="15" fill="rgb(250,127,30)" fg:x="980" fg:w="23"/><text x="31.7917%" y="543.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.74%)</title><rect x="31.5417%" y="517" width="0.7403%" height="15" fill="rgb(230,49,44)" fg:x="980" fg:w="23"/><text x="31.7917%" y="527.50"></text></g><g><title>std::panicking::try (23 samples, 0.74%)</title><rect x="31.5417%" y="501" width="0.7403%" height="15" fill="rgb(229,67,23)" fg:x="980" fg:w="23"/><text x="31.7917%" y="511.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.74%)</title><rect x="31.5417%" y="485" width="0.7403%" height="15" fill="rgb(249,83,47)" fg:x="980" fg:w="23"/><text x="31.7917%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.74%)</title><rect x="31.5417%" y="469" width="0.7403%" height="15" fill="rgb(215,43,3)" fg:x="980" fg:w="23"/><text x="31.7917%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (23 samples, 0.74%)</title><rect x="31.5417%" y="453" width="0.7403%" height="15" fill="rgb(238,154,13)" fg:x="980" fg:w="23"/><text x="31.7917%" y="463.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (23 samples, 0.74%)</title><rect x="31.5417%" y="437" width="0.7403%" height="15" fill="rgb(219,56,2)" fg:x="980" fg:w="23"/><text x="31.7917%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (21 samples, 0.68%)</title><rect x="31.6061%" y="421" width="0.6759%" height="15" fill="rgb(233,0,4)" fg:x="982" fg:w="21"/><text x="31.8561%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (21 samples, 0.68%)</title><rect x="31.6061%" y="405" width="0.6759%" height="15" fill="rgb(235,30,7)" fg:x="982" fg:w="21"/><text x="31.8561%" y="415.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.06%)</title><rect x="32.2176%" y="389" width="0.0644%" height="15" fill="rgb(250,79,13)" fg:x="1001" fg:w="2"/><text x="32.4676%" y="399.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (2 samples, 0.06%)</title><rect x="32.2176%" y="373" width="0.0644%" height="15" fill="rgb(211,146,34)" fg:x="1001" fg:w="2"/><text x="32.4676%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.06%)</title><rect x="32.2176%" y="357" width="0.0644%" height="15" fill="rgb(228,22,38)" fg:x="1001" fg:w="2"/><text x="32.4676%" y="367.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (2 samples, 0.06%)</title><rect x="32.2176%" y="341" width="0.0644%" height="15" fill="rgb(235,168,5)" fg:x="1001" fg:w="2"/><text x="32.4676%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.06%)</title><rect x="32.2176%" y="325" width="0.0644%" height="15" fill="rgb(221,155,16)" fg:x="1001" fg:w="2"/><text x="32.4676%" y="335.50"></text></g><g><title>core::mem::replace (2 samples, 0.06%)</title><rect x="32.2176%" y="309" width="0.0644%" height="15" fill="rgb(215,215,53)" fg:x="1001" fg:w="2"/><text x="32.4676%" y="319.50"></text></g><g><title>core::ptr::read (2 samples, 0.06%)</title><rect x="32.2176%" y="293" width="0.0644%" height="15" fill="rgb(223,4,10)" fg:x="1001" fg:w="2"/><text x="32.4676%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (387 samples, 12.46%)</title><rect x="19.8584%" y="565" width="12.4557%" height="15" fill="rgb(234,103,6)" fg:x="617" fg:w="387"/><text x="20.1084%" y="575.50">tokio::runtime::tas..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (24 samples, 0.77%)</title><rect x="31.5417%" y="549" width="0.7724%" height="15" fill="rgb(227,97,0)" fg:x="980" fg:w="24"/><text x="31.7917%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.03%)</title><rect x="32.2819%" y="533" width="0.0322%" height="15" fill="rgb(234,150,53)" fg:x="1003" fg:w="1"/><text x="32.5319%" y="543.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.03%)</title><rect x="32.2819%" y="517" width="0.0322%" height="15" fill="rgb(228,201,54)" fg:x="1003" fg:w="1"/><text x="32.5319%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (1 samples, 0.03%)</title><rect x="32.2819%" y="501" width="0.0322%" height="15" fill="rgb(222,22,37)" fg:x="1003" fg:w="1"/><text x="32.5319%" y="511.50"></text></g><g><title>tokio-runtime-w (1,009 samples, 32.48%)</title><rect x="0.0000%" y="869" width="32.4751%" height="15" fill="rgb(237,53,32)" fg:x="0" fg:w="1009"/><text x="0.2500%" y="879.50">tokio-runtime-w</text></g><g><title>start_thread (424 samples, 13.65%)</title><rect x="18.8285%" y="853" width="13.6466%" height="15" fill="rgb(233,25,53)" fg:x="585" fg:w="424"/><text x="19.0785%" y="863.50">start_thread</text></g><g><title>start_thread (424 samples, 13.65%)</title><rect x="18.8285%" y="837" width="13.6466%" height="15" fill="rgb(210,40,34)" fg:x="585" fg:w="424"/><text x="19.0785%" y="847.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (424 samples, 13.65%)</title><rect x="18.8285%" y="821" width="13.6466%" height="15" fill="rgb(241,220,44)" fg:x="585" fg:w="424"/><text x="19.0785%" y="831.50">std::sys::pal::unix::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (424 samples, 13.65%)</title><rect x="18.8285%" y="805" width="13.6466%" height="15" fill="rgb(235,28,35)" fg:x="585" fg:w="424"/><text x="19.0785%" y="815.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (424 samples, 13.65%)</title><rect x="18.8285%" y="789" width="13.6466%" height="15" fill="rgb(210,56,17)" fg:x="585" fg:w="424"/><text x="19.0785%" y="799.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (424 samples, 13.65%)</title><rect x="18.8285%" y="773" width="13.6466%" height="15" fill="rgb(224,130,29)" fg:x="585" fg:w="424"/><text x="19.0785%" y="783.50">core::ops::function::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (424 samples, 13.65%)</title><rect x="18.8285%" y="757" width="13.6466%" height="15" fill="rgb(235,212,8)" fg:x="585" fg:w="424"/><text x="19.0785%" y="767.50">std::thread::Builder:..</text></g><g><title>std::panic::catch_unwind (424 samples, 13.65%)</title><rect x="18.8285%" y="741" width="13.6466%" height="15" fill="rgb(223,33,50)" fg:x="585" fg:w="424"/><text x="19.0785%" y="751.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (424 samples, 13.65%)</title><rect x="18.8285%" y="725" width="13.6466%" height="15" fill="rgb(219,149,13)" fg:x="585" fg:w="424"/><text x="19.0785%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (424 samples, 13.65%)</title><rect x="18.8285%" y="709" width="13.6466%" height="15" fill="rgb(250,156,29)" fg:x="585" fg:w="424"/><text x="19.0785%" y="719.50">std::panicking::try::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (424 samples, 13.65%)</title><rect x="18.8285%" y="693" width="13.6466%" height="15" fill="rgb(216,193,19)" fg:x="585" fg:w="424"/><text x="19.0785%" y="703.50">&lt;core::panic::unwind_..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (424 samples, 13.65%)</title><rect x="18.8285%" y="677" width="13.6466%" height="15" fill="rgb(216,135,14)" fg:x="585" fg:w="424"/><text x="19.0785%" y="687.50">std::thread::Builder:..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (424 samples, 13.65%)</title><rect x="18.8285%" y="661" width="13.6466%" height="15" fill="rgb(241,47,5)" fg:x="585" fg:w="424"/><text x="19.0785%" y="671.50">std::sys::backtrace::..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (424 samples, 13.65%)</title><rect x="18.8285%" y="645" width="13.6466%" height="15" fill="rgb(233,42,35)" fg:x="585" fg:w="424"/><text x="19.0785%" y="655.50">tokio::runtime::block..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (424 samples, 13.65%)</title><rect x="18.8285%" y="629" width="13.6466%" height="15" fill="rgb(231,13,6)" fg:x="585" fg:w="424"/><text x="19.0785%" y="639.50">tokio::runtime::block..</text></g><g><title>tokio::runtime::blocking::pool::Task::run (392 samples, 12.62%)</title><rect x="19.8584%" y="613" width="12.6167%" height="15" fill="rgb(207,181,40)" fg:x="617" fg:w="392"/><text x="20.1084%" y="623.50">tokio::runtime::blo..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (392 samples, 12.62%)</title><rect x="19.8584%" y="597" width="12.6167%" height="15" fill="rgb(254,173,49)" fg:x="617" fg:w="392"/><text x="20.1084%" y="607.50">tokio::runtime::tas..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (392 samples, 12.62%)</title><rect x="19.8584%" y="581" width="12.6167%" height="15" fill="rgb(221,1,38)" fg:x="617" fg:w="392"/><text x="20.1084%" y="591.50">tokio::runtime::tas..</text></g><g><title>tokio::runtime::task::raw::poll (5 samples, 0.16%)</title><rect x="32.3141%" y="565" width="0.1609%" height="15" fill="rgb(206,124,46)" fg:x="1004" fg:w="5"/><text x="32.5641%" y="575.50"></text></g><g><title>__fdget_pos (1 samples, 0.03%)</title><rect x="32.5394%" y="709" width="0.0322%" height="15" fill="rgb(249,21,11)" fg:x="1011" fg:w="1"/><text x="32.7894%" y="719.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="32.5394%" y="693" width="0.0322%" height="15" fill="rgb(222,201,40)" fg:x="1011" fg:w="1"/><text x="32.7894%" y="703.50"></text></g><g><title>__arch_clear_user (597 samples, 19.21%)</title><rect x="32.5716%" y="693" width="19.2147%" height="15" fill="rgb(235,61,29)" fg:x="1012" fg:w="597"/><text x="32.8216%" y="703.50">__arch_clear_user</text></g><g><title>el1h_64_irq (4 samples, 0.13%)</title><rect x="51.6575%" y="677" width="0.1287%" height="15" fill="rgb(219,207,3)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="687.50"></text></g><g><title>el1h_64_irq_handler (4 samples, 0.13%)</title><rect x="51.6575%" y="661" width="0.1287%" height="15" fill="rgb(222,56,46)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="671.50"></text></g><g><title>el1_interrupt (4 samples, 0.13%)</title><rect x="51.6575%" y="645" width="0.1287%" height="15" fill="rgb(239,76,54)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="655.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.13%)</title><rect x="51.6575%" y="629" width="0.1287%" height="15" fill="rgb(231,124,27)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="639.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.13%)</title><rect x="51.6575%" y="613" width="0.1287%" height="15" fill="rgb(249,195,6)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="623.50"></text></g><g><title>call_on_irq_stack (4 samples, 0.13%)</title><rect x="51.6575%" y="597" width="0.1287%" height="15" fill="rgb(237,174,47)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="607.50"></text></g><g><title>____do_softirq (4 samples, 0.13%)</title><rect x="51.6575%" y="581" width="0.1287%" height="15" fill="rgb(206,201,31)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="591.50"></text></g><g><title>__do_softirq (4 samples, 0.13%)</title><rect x="51.6575%" y="565" width="0.1287%" height="15" fill="rgb(231,57,52)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="575.50"></text></g><g><title>handle_softirqs (4 samples, 0.13%)</title><rect x="51.6575%" y="549" width="0.1287%" height="15" fill="rgb(248,177,22)" fg:x="1605" fg:w="4"/><text x="51.9075%" y="559.50"></text></g><g><title>run_timer_softirq (3 samples, 0.10%)</title><rect x="51.6897%" y="533" width="0.0966%" height="15" fill="rgb(215,211,37)" fg:x="1606" fg:w="3"/><text x="51.9397%" y="543.50"></text></g><g><title>tmigr_handle_remote (3 samples, 0.10%)</title><rect x="51.6897%" y="517" width="0.0966%" height="15" fill="rgb(241,128,51)" fg:x="1606" fg:w="3"/><text x="51.9397%" y="527.50"></text></g><g><title>timer_expire_remote (3 samples, 0.10%)</title><rect x="51.6897%" y="501" width="0.0966%" height="15" fill="rgb(227,165,31)" fg:x="1606" fg:w="3"/><text x="51.9397%" y="511.50"></text></g><g><title>__run_timer_base.part.0 (3 samples, 0.10%)</title><rect x="51.6897%" y="485" width="0.0966%" height="15" fill="rgb(228,167,24)" fg:x="1606" fg:w="3"/><text x="51.9397%" y="495.50"></text></g><g><title>call_timer_fn (3 samples, 0.10%)</title><rect x="51.6897%" y="469" width="0.0966%" height="15" fill="rgb(228,143,12)" fg:x="1606" fg:w="3"/><text x="51.9397%" y="479.50"></text></g><g><title>process_timeout (3 samples, 0.10%)</title><rect x="51.6897%" y="453" width="0.0966%" height="15" fill="rgb(249,149,8)" fg:x="1606" fg:w="3"/><text x="51.9397%" y="463.50"></text></g><g><title>wake_up_process (3 samples, 0.10%)</title><rect x="51.6897%" y="437" width="0.0966%" height="15" fill="rgb(243,35,44)" fg:x="1606" fg:w="3"/><text x="51.9397%" y="447.50"></text></g><g><title>__GI___libc_read (620 samples, 19.95%)</title><rect x="32.4751%" y="837" width="19.9549%" height="15" fill="rgb(246,89,9)" fg:x="1009" fg:w="620"/><text x="32.7251%" y="847.50">__GI___libc_read</text></g><g><title>el0t_64_sync (620 samples, 19.95%)</title><rect x="32.4751%" y="821" width="19.9549%" height="15" fill="rgb(233,213,13)" fg:x="1009" fg:w="620"/><text x="32.7251%" y="831.50">el0t_64_sync</text></g><g><title>el0t_64_sync_handler (620 samples, 19.95%)</title><rect x="32.4751%" y="805" width="19.9549%" height="15" fill="rgb(233,141,41)" fg:x="1009" fg:w="620"/><text x="32.7251%" y="815.50">el0t_64_sync_handler</text></g><g><title>el0_svc (620 samples, 19.95%)</title><rect x="32.4751%" y="789" width="19.9549%" height="15" fill="rgb(239,167,4)" fg:x="1009" fg:w="620"/><text x="32.7251%" y="799.50">el0_svc</text></g><g><title>do_el0_svc (618 samples, 19.89%)</title><rect x="32.5394%" y="773" width="19.8906%" height="15" fill="rgb(209,217,16)" fg:x="1011" fg:w="618"/><text x="32.7894%" y="783.50">do_el0_svc</text></g><g><title>invoke_syscall.constprop.0 (618 samples, 19.89%)</title><rect x="32.5394%" y="757" width="19.8906%" height="15" fill="rgb(219,88,35)" fg:x="1011" fg:w="618"/><text x="32.7894%" y="767.50">invoke_syscall.constprop.0</text></g><g><title>__arm64_sys_read (618 samples, 19.89%)</title><rect x="32.5394%" y="741" width="19.8906%" height="15" fill="rgb(220,193,23)" fg:x="1011" fg:w="618"/><text x="32.7894%" y="751.50">__arm64_sys_read</text></g><g><title>ksys_read (618 samples, 19.89%)</title><rect x="32.5394%" y="725" width="19.8906%" height="15" fill="rgb(230,90,52)" fg:x="1011" fg:w="618"/><text x="32.7894%" y="735.50">ksys_read</text></g><g><title>vfs_read (617 samples, 19.86%)</title><rect x="32.5716%" y="709" width="19.8584%" height="15" fill="rgb(252,106,19)" fg:x="1012" fg:w="617"/><text x="32.8216%" y="719.50">vfs_read</text></g><g><title>read_zero (20 samples, 0.64%)</title><rect x="51.7863%" y="693" width="0.6437%" height="15" fill="rgb(206,74,20)" fg:x="1609" fg:w="20"/><text x="52.0363%" y="703.50"></text></g><g><title>__cond_resched (14 samples, 0.45%)</title><rect x="51.9794%" y="677" width="0.4506%" height="15" fill="rgb(230,138,44)" fg:x="1615" fg:w="14"/><text x="52.2294%" y="687.50"></text></g><g><title>rcu_all_qs (11 samples, 0.35%)</title><rect x="52.0760%" y="661" width="0.3540%" height="15" fill="rgb(235,182,43)" fg:x="1618" fg:w="11"/><text x="52.3260%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="52.4300%" y="837" width="0.0322%" height="15" fill="rgb(242,16,51)" fg:x="1629" fg:w="1"/><text x="52.6800%" y="847.50"></text></g><g><title>tcache_put (1 samples, 0.03%)</title><rect x="52.4300%" y="821" width="0.0322%" height="15" fill="rgb(248,9,4)" fg:x="1629" fg:w="1"/><text x="52.6800%" y="831.50"></text></g><g><title>_int_free_maybe_consolidate (1 samples, 0.03%)</title><rect x="52.4622%" y="837" width="0.0322%" height="15" fill="rgb(210,31,22)" fg:x="1630" fg:w="1"/><text x="52.7122%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="52.4944%" y="837" width="0.0322%" height="15" fill="rgb(239,54,39)" fg:x="1631" fg:w="1"/><text x="52.7444%" y="847.50"></text></g><g><title>[unknown] (624 samples, 20.08%)</title><rect x="32.4751%" y="853" width="20.0837%" height="15" fill="rgb(230,99,41)" fg:x="1009" fg:w="624"/><text x="32.7251%" y="863.50">[unknown]</text></g><g><title>_mid_memalign (1 samples, 0.03%)</title><rect x="52.5266%" y="837" width="0.0322%" height="15" fill="rgb(253,106,12)" fg:x="1632" fg:w="1"/><text x="52.7766%" y="847.50"></text></g><g><title>tag_new_usable (1 samples, 0.03%)</title><rect x="52.5266%" y="821" width="0.0322%" height="15" fill="rgb(213,46,41)" fg:x="1632" fg:w="1"/><text x="52.7766%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="52.5587%" y="853" width="0.0322%" height="15" fill="rgb(215,133,35)" fg:x="1633" fg:w="1"/><text x="52.8087%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="52.5587%" y="837" width="0.0322%" height="15" fill="rgb(213,28,5)" fg:x="1633" fg:w="1"/><text x="52.8087%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="52.5587%" y="821" width="0.0322%" height="15" fill="rgb(215,77,49)" fg:x="1633" fg:w="1"/><text x="52.8087%" y="831.50"></text></g><g><title>__posix_memalign (2 samples, 0.06%)</title><rect x="52.5909%" y="853" width="0.0644%" height="15" fill="rgb(248,100,22)" fg:x="1634" fg:w="2"/><text x="52.8409%" y="863.50"></text></g><g><title>__posix_memalign (2 samples, 0.06%)</title><rect x="52.5909%" y="837" width="0.0644%" height="15" fill="rgb(208,67,9)" fg:x="1634" fg:w="2"/><text x="52.8409%" y="847.50"></text></g><g><title>__posix_memalign (2 samples, 0.06%)</title><rect x="52.5909%" y="821" width="0.0644%" height="15" fill="rgb(219,133,21)" fg:x="1634" fg:w="2"/><text x="52.8409%" y="831.50"></text></g><g><title>__posix_memalign (2 samples, 0.06%)</title><rect x="52.5909%" y="805" width="0.0644%" height="15" fill="rgb(246,46,29)" fg:x="1634" fg:w="2"/><text x="52.8409%" y="815.50"></text></g><g><title>_mid_memalign (2 samples, 0.06%)</title><rect x="52.5909%" y="789" width="0.0644%" height="15" fill="rgb(246,185,52)" fg:x="1634" fg:w="2"/><text x="52.8409%" y="799.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.03%)</title><rect x="52.6553%" y="853" width="0.0322%" height="15" fill="rgb(252,136,11)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="863.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.03%)</title><rect x="52.6553%" y="837" width="0.0322%" height="15" fill="rgb(219,138,53)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="847.50"></text></g><g><title>__GI__exit (1 samples, 0.03%)</title><rect x="52.6553%" y="821" width="0.0322%" height="15" fill="rgb(211,51,23)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="831.50"></text></g><g><title>el0t_64_sync (1 samples, 0.03%)</title><rect x="52.6553%" y="805" width="0.0322%" height="15" fill="rgb(247,221,28)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="815.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.03%)</title><rect x="52.6553%" y="789" width="0.0322%" height="15" fill="rgb(251,222,45)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="799.50"></text></g><g><title>el0_svc (1 samples, 0.03%)</title><rect x="52.6553%" y="773" width="0.0322%" height="15" fill="rgb(217,162,53)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="783.50"></text></g><g><title>do_el0_svc (1 samples, 0.03%)</title><rect x="52.6553%" y="757" width="0.0322%" height="15" fill="rgb(229,93,14)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="767.50"></text></g><g><title>invoke_syscall.constprop.0 (1 samples, 0.03%)</title><rect x="52.6553%" y="741" width="0.0322%" height="15" fill="rgb(209,67,49)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.03%)</title><rect x="52.6553%" y="725" width="0.0322%" height="15" fill="rgb(213,87,29)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="735.50"></text></g><g><title>do_group_exit (1 samples, 0.03%)</title><rect x="52.6553%" y="709" width="0.0322%" height="15" fill="rgb(205,151,52)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="719.50"></text></g><g><title>do_exit (1 samples, 0.03%)</title><rect x="52.6553%" y="693" width="0.0322%" height="15" fill="rgb(253,215,39)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="703.50"></text></g><g><title>mmput (1 samples, 0.03%)</title><rect x="52.6553%" y="677" width="0.0322%" height="15" fill="rgb(221,220,41)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="687.50"></text></g><g><title>__mmput (1 samples, 0.03%)</title><rect x="52.6553%" y="661" width="0.0322%" height="15" fill="rgb(218,133,21)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="671.50"></text></g><g><title>exit_mmap (1 samples, 0.03%)</title><rect x="52.6553%" y="645" width="0.0322%" height="15" fill="rgb(221,193,43)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="655.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="52.6553%" y="629" width="0.0322%" height="15" fill="rgb(240,128,52)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="639.50"></text></g><g><title>unmap_single_vma.isra.0 (1 samples, 0.03%)</title><rect x="52.6553%" y="613" width="0.0322%" height="15" fill="rgb(253,114,12)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="623.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="52.6553%" y="597" width="0.0322%" height="15" fill="rgb(215,223,47)" fg:x="1636" fg:w="1"/><text x="52.9053%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (2 samples, 0.06%)</title><rect x="52.8806%" y="549" width="0.0644%" height="15" fill="rgb(248,225,23)" fg:x="1643" fg:w="2"/><text x="53.1306%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (2 samples, 0.06%)</title><rect x="52.8806%" y="533" width="0.0644%" height="15" fill="rgb(250,108,0)" fg:x="1643" fg:w="2"/><text x="53.1306%" y="543.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="52.8806%" y="517" width="0.0644%" height="15" fill="rgb(228,208,7)" fg:x="1643" fg:w="2"/><text x="53.1306%" y="527.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.03%)</title><rect x="52.9128%" y="501" width="0.0322%" height="15" fill="rgb(244,45,10)" fg:x="1644" fg:w="1"/><text x="53.1628%" y="511.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (1 samples, 0.03%)</title><rect x="53.1703%" y="453" width="0.0322%" height="15" fill="rgb(207,125,25)" fg:x="1652" fg:w="1"/><text x="53.4203%" y="463.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.03%)</title><rect x="53.1703%" y="437" width="0.0322%" height="15" fill="rgb(210,195,18)" fg:x="1652" fg:w="1"/><text x="53.4203%" y="447.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.03%)</title><rect x="53.2024%" y="453" width="0.0322%" height="15" fill="rgb(249,80,12)" fg:x="1653" fg:w="1"/><text x="53.4524%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.03%)</title><rect x="53.4277%" y="389" width="0.0322%" height="15" fill="rgb(221,65,9)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="399.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="53.4277%" y="373" width="0.0322%" height="15" fill="rgb(235,49,36)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="383.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.03%)</title><rect x="53.4277%" y="357" width="0.0322%" height="15" fill="rgb(225,32,20)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="53.4277%" y="341" width="0.0322%" height="15" fill="rgb(215,141,46)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="351.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.03%)</title><rect x="53.4277%" y="325" width="0.0322%" height="15" fill="rgb(250,160,47)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="335.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop::_{{closure}} (1 samples, 0.03%)</title><rect x="53.4277%" y="309" width="0.0322%" height="15" fill="rgb(216,222,40)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="53.4277%" y="293" width="0.0322%" height="15" fill="rgb(234,217,39)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="53.4277%" y="277" width="0.0322%" height="15" fill="rgb(207,178,40)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="287.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="53.4277%" y="261" width="0.0322%" height="15" fill="rgb(221,136,13)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="271.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="53.4277%" y="245" width="0.0322%" height="15" fill="rgb(249,199,10)" fg:x="1660" fg:w="1"/><text x="53.6777%" y="255.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1 samples, 0.03%)</title><rect x="53.4599%" y="389" width="0.0322%" height="15" fill="rgb(249,222,13)" fg:x="1661" fg:w="1"/><text x="53.7099%" y="399.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.03%)</title><rect x="53.4599%" y="373" width="0.0322%" height="15" fill="rgb(244,185,38)" fg:x="1661" fg:w="1"/><text x="53.7099%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="53.4599%" y="357" width="0.0322%" height="15" fill="rgb(236,202,9)" fg:x="1661" fg:w="1"/><text x="53.7099%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="53.4599%" y="341" width="0.0322%" height="15" fill="rgb(250,229,37)" fg:x="1661" fg:w="1"/><text x="53.7099%" y="351.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.03%)</title><rect x="53.4599%" y="325" width="0.0322%" height="15" fill="rgb(206,174,23)" fg:x="1661" fg:w="1"/><text x="53.7099%" y="335.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="53.4599%" y="309" width="0.0322%" height="15" fill="rgb(211,33,43)" fg:x="1661" fg:w="1"/><text x="53.7099%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output (5 samples, 0.16%)</title><rect x="53.5565%" y="341" width="0.1609%" height="15" fill="rgb(245,58,50)" fg:x="1664" fg:w="5"/><text x="53.8065%" y="351.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.16%)</title><rect x="53.5565%" y="325" width="0.1609%" height="15" fill="rgb(244,68,36)" fg:x="1664" fg:w="5"/><text x="53.8065%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output::_{{closure}} (5 samples, 0.16%)</title><rect x="53.5565%" y="309" width="0.1609%" height="15" fill="rgb(232,229,15)" fg:x="1664" fg:w="5"/><text x="53.8065%" y="319.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.35%)</title><rect x="53.3956%" y="405" width="0.3540%" height="15" fill="rgb(254,30,23)" fg:x="1659" fg:w="11"/><text x="53.6456%" y="415.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (8 samples, 0.26%)</title><rect x="53.4921%" y="389" width="0.2575%" height="15" fill="rgb(235,160,14)" fg:x="1662" fg:w="8"/><text x="53.7421%" y="399.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (8 samples, 0.26%)</title><rect x="53.4921%" y="373" width="0.2575%" height="15" fill="rgb(212,155,44)" fg:x="1662" fg:w="8"/><text x="53.7421%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (6 samples, 0.19%)</title><rect x="53.5565%" y="357" width="0.1931%" height="15" fill="rgb(226,2,50)" fg:x="1664" fg:w="6"/><text x="53.8065%" y="367.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (1 samples, 0.03%)</title><rect x="53.7174%" y="341" width="0.0322%" height="15" fill="rgb(234,177,6)" fg:x="1669" fg:w="1"/><text x="53.9674%" y="351.50"></text></g><g><title>__GI___libc_free (2 samples, 0.06%)</title><rect x="53.7496%" y="341" width="0.0644%" height="15" fill="rgb(217,24,9)" fg:x="1670" fg:w="2"/><text x="53.9996%" y="351.50"></text></g><g><title>free@plt (1 samples, 0.03%)</title><rect x="53.8140%" y="341" width="0.0322%" height="15" fill="rgb(220,13,46)" fg:x="1672" fg:w="1"/><text x="54.0640%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::fs::file::State&gt; (6 samples, 0.19%)</title><rect x="53.7496%" y="405" width="0.1931%" height="15" fill="rgb(239,221,27)" fg:x="1670" fg:w="6"/><text x="53.9996%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;(tokio::fs::file::Operation,tokio::io::blocking::Buf)&gt;&gt; (6 samples, 0.19%)</title><rect x="53.7496%" y="389" width="0.1931%" height="15" fill="rgb(222,198,25)" fg:x="1670" fg:w="6"/><text x="53.9996%" y="399.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.19%)</title><rect x="53.7496%" y="373" width="0.1931%" height="15" fill="rgb(211,99,13)" fg:x="1670" fg:w="6"/><text x="53.9996%" y="383.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_join_handle_slow (6 samples, 0.19%)</title><rect x="53.7496%" y="357" width="0.1931%" height="15" fill="rgb(232,111,31)" fg:x="1670" fg:w="6"/><text x="53.9996%" y="367.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (3 samples, 0.10%)</title><rect x="53.8462%" y="341" width="0.0966%" height="15" fill="rgb(245,82,37)" fg:x="1673" fg:w="3"/><text x="54.0962%" y="351.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (3 samples, 0.10%)</title><rect x="53.8462%" y="325" width="0.0966%" height="15" fill="rgb(227,149,46)" fg:x="1673" fg:w="3"/><text x="54.0962%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (3 samples, 0.10%)</title><rect x="53.8462%" y="309" width="0.0966%" height="15" fill="rgb(218,36,50)" fg:x="1673" fg:w="3"/><text x="54.0962%" y="319.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (3 samples, 0.10%)</title><rect x="53.8462%" y="293" width="0.0966%" height="15" fill="rgb(226,80,48)" fg:x="1673" fg:w="3"/><text x="54.0962%" y="303.50"></text></g><g><title>tokio::runtime::task::state::State::load (3 samples, 0.10%)</title><rect x="53.8462%" y="277" width="0.0966%" height="15" fill="rgb(238,224,15)" fg:x="1673" fg:w="3"/><text x="54.0962%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.10%)</title><rect x="53.8462%" y="261" width="0.0966%" height="15" fill="rgb(241,136,10)" fg:x="1673" fg:w="3"/><text x="54.0962%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.10%)</title><rect x="53.8462%" y="245" width="0.0966%" height="15" fill="rgb(208,32,45)" fg:x="1673" fg:w="3"/><text x="54.0962%" y="255.50"></text></g><g><title>__memcpy_generic (264 samples, 8.50%)</title><rect x="53.9427%" y="341" width="8.4969%" height="15" fill="rgb(207,135,9)" fg:x="1676" fg:w="264"/><text x="54.1927%" y="351.50">__memcpy_gen..</text></g><g><title>tokio::io::blocking::Buf::copy_to (266 samples, 8.56%)</title><rect x="53.9427%" y="405" width="8.5613%" height="15" fill="rgb(206,86,44)" fg:x="1676" fg:w="266"/><text x="54.1927%" y="415.50">tokio::io::b..</text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (266 samples, 8.56%)</title><rect x="53.9427%" y="389" width="8.5613%" height="15" fill="rgb(245,177,15)" fg:x="1676" fg:w="266"/><text x="54.1927%" y="399.50">tokio::io::r..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (266 samples, 8.56%)</title><rect x="53.9427%" y="373" width="8.5613%" height="15" fill="rgb(206,64,50)" fg:x="1676" fg:w="266"/><text x="54.1927%" y="383.50">core::ptr::m..</text></g><g><title>core::intrinsics::copy_nonoverlapping (266 samples, 8.56%)</title><rect x="53.9427%" y="357" width="8.5613%" height="15" fill="rgb(234,36,40)" fg:x="1676" fg:w="266"/><text x="54.1927%" y="367.50">core::intrin..</text></g><g><title>memcpy@plt (2 samples, 0.06%)</title><rect x="62.4397%" y="341" width="0.0644%" height="15" fill="rgb(213,64,8)" fg:x="1940" fg:w="2"/><text x="62.6897%" y="351.50"></text></g><g><title>tokio::runtime::handle::Handle::current (3 samples, 0.10%)</title><rect x="62.5040%" y="389" width="0.0966%" height="15" fill="rgb(210,75,36)" fg:x="1942" fg:w="3"/><text x="62.7540%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (3 samples, 0.10%)</title><rect x="62.5040%" y="373" width="0.0966%" height="15" fill="rgb(229,88,21)" fg:x="1942" fg:w="3"/><text x="62.7540%" y="383.50"></text></g><g><title>tokio::runtime::context::current::with_current (1 samples, 0.03%)</title><rect x="62.5684%" y="357" width="0.0322%" height="15" fill="rgb(252,204,47)" fg:x="1944" fg:w="1"/><text x="62.8184%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="62.5684%" y="341" width="0.0322%" height="15" fill="rgb(208,77,27)" fg:x="1944" fg:w="1"/><text x="62.8184%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="62.5684%" y="325" width="0.0322%" height="15" fill="rgb(221,76,26)" fg:x="1944" fg:w="1"/><text x="62.8184%" y="335.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1 samples, 0.03%)</title><rect x="62.5684%" y="309" width="0.0322%" height="15" fill="rgb(225,139,18)" fg:x="1944" fg:w="1"/><text x="62.8184%" y="319.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="62.5684%" y="293" width="0.0322%" height="15" fill="rgb(230,137,11)" fg:x="1944" fg:w="1"/><text x="62.8184%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="62.5684%" y="277" width="0.0322%" height="15" fill="rgb(212,28,1)" fg:x="1944" fg:w="1"/><text x="62.8184%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.03%)</title><rect x="62.6971%" y="325" width="0.0322%" height="15" fill="rgb(248,164,17)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="62.6971%" y="309" width="0.0322%" height="15" fill="rgb(222,171,42)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="319.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.03%)</title><rect x="62.6971%" y="293" width="0.0322%" height="15" fill="rgb(243,84,45)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="303.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="62.6971%" y="277" width="0.0322%" height="15" fill="rgb(252,49,23)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="287.50"></text></g><g><title>el0t_64_sync (1 samples, 0.03%)</title><rect x="62.6971%" y="261" width="0.0322%" height="15" fill="rgb(215,19,7)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="271.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.03%)</title><rect x="62.6971%" y="245" width="0.0322%" height="15" fill="rgb(238,81,41)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="255.50"></text></g><g><title>el0_svc (1 samples, 0.03%)</title><rect x="62.6971%" y="229" width="0.0322%" height="15" fill="rgb(210,199,37)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="239.50"></text></g><g><title>do_el0_svc (1 samples, 0.03%)</title><rect x="62.6971%" y="213" width="0.0322%" height="15" fill="rgb(244,192,49)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="223.50"></text></g><g><title>invoke_syscall.constprop.0 (1 samples, 0.03%)</title><rect x="62.6971%" y="197" width="0.0322%" height="15" fill="rgb(226,211,11)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="207.50"></text></g><g><title>__arm64_sys_futex (1 samples, 0.03%)</title><rect x="62.6971%" y="181" width="0.0322%" height="15" fill="rgb(236,162,54)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="191.50"></text></g><g><title>do_futex (1 samples, 0.03%)</title><rect x="62.6971%" y="165" width="0.0322%" height="15" fill="rgb(220,229,9)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="175.50"></text></g><g><title>futex_wake (1 samples, 0.03%)</title><rect x="62.6971%" y="149" width="0.0322%" height="15" fill="rgb(250,87,22)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="159.50"></text></g><g><title>wake_up_q (1 samples, 0.03%)</title><rect x="62.6971%" y="133" width="0.0322%" height="15" fill="rgb(239,43,17)" fg:x="1948" fg:w="1"/><text x="62.9471%" y="143.50"></text></g><g><title>futex_hash (1 samples, 0.03%)</title><rect x="63.2443%" y="197" width="0.0322%" height="15" fill="rgb(231,177,25)" fg:x="1965" fg:w="1"/><text x="63.4943%" y="207.50"></text></g><g><title>futex_wake_mark (1 samples, 0.03%)</title><rect x="63.2765%" y="181" width="0.0322%" height="15" fill="rgb(219,179,1)" fg:x="1966" fg:w="1"/><text x="63.5265%" y="191.50"></text></g><g><title>__futex_wake_mark (1 samples, 0.03%)</title><rect x="63.2765%" y="165" width="0.0322%" height="15" fill="rgb(238,219,53)" fg:x="1966" fg:w="1"/><text x="63.5265%" y="175.50"></text></g><g><title>plist_del (1 samples, 0.03%)</title><rect x="63.2765%" y="149" width="0.0322%" height="15" fill="rgb(232,167,36)" fg:x="1966" fg:w="1"/><text x="63.5265%" y="159.50"></text></g><g><title>try_to_wake_up (2 samples, 0.06%)</title><rect x="63.3087%" y="181" width="0.0644%" height="15" fill="rgb(244,19,51)" fg:x="1967" fg:w="2"/><text x="63.5587%" y="191.50"></text></g><g><title>el1h_64_irq (1 samples, 0.03%)</title><rect x="73.3827%" y="165" width="0.0322%" height="15" fill="rgb(224,6,22)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="175.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.03%)</title><rect x="73.3827%" y="149" width="0.0322%" height="15" fill="rgb(224,145,5)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="159.50"></text></g><g><title>el1_interrupt (1 samples, 0.03%)</title><rect x="73.3827%" y="133" width="0.0322%" height="15" fill="rgb(234,130,49)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="143.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="73.3827%" y="117" width="0.0322%" height="15" fill="rgb(254,6,2)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="127.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="73.3827%" y="101" width="0.0322%" height="15" fill="rgb(208,96,46)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="111.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.03%)</title><rect x="73.3827%" y="85" width="0.0322%" height="15" fill="rgb(239,3,39)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="95.50"></text></g><g><title>____do_softirq (1 samples, 0.03%)</title><rect x="73.3827%" y="69" width="0.0322%" height="15" fill="rgb(233,210,1)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="79.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="73.3827%" y="53" width="0.0322%" height="15" fill="rgb(244,137,37)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="63.50"></text></g><g><title>handle_softirqs (1 samples, 0.03%)</title><rect x="73.3827%" y="37" width="0.0322%" height="15" fill="rgb(240,136,2)" fg:x="2280" fg:w="1"/><text x="73.6327%" y="47.50"></text></g><g><title>futex_wake (326 samples, 10.49%)</title><rect x="63.2765%" y="197" width="10.4924%" height="15" fill="rgb(239,18,37)" fg:x="1966" fg:w="326"/><text x="63.5265%" y="207.50">futex_wake</text></g><g><title>wake_up_q (323 samples, 10.40%)</title><rect x="63.3730%" y="181" width="10.3959%" height="15" fill="rgb(218,185,22)" fg:x="1969" fg:w="323"/><text x="63.6230%" y="191.50">wake_up_q</text></g><g><title>try_to_wake_up (11 samples, 0.35%)</title><rect x="73.4149%" y="165" width="0.3540%" height="15" fill="rgb(225,218,4)" fg:x="2281" fg:w="11"/><text x="73.6649%" y="175.50"></text></g><g><title>do_futex (331 samples, 10.65%)</title><rect x="63.1477%" y="213" width="10.6534%" height="15" fill="rgb(230,182,32)" fg:x="1962" fg:w="331"/><text x="63.3977%" y="223.50">do_futex</text></g><g><title>futex_wake_mark (1 samples, 0.03%)</title><rect x="73.7689%" y="197" width="0.0322%" height="15" fill="rgb(242,56,43)" fg:x="2292" fg:w="1"/><text x="74.0189%" y="207.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (347 samples, 11.17%)</title><rect x="62.6650%" y="341" width="11.1683%" height="15" fill="rgb(233,99,24)" fg:x="1947" fg:w="347"/><text x="62.9150%" y="351.50">tokio::runtime::..</text></g><g><title>syscall (345 samples, 11.10%)</title><rect x="62.7293%" y="325" width="11.1040%" height="15" fill="rgb(234,209,42)" fg:x="1949" fg:w="345"/><text x="62.9793%" y="335.50">syscall</text></g><g><title>el0t_64_sync (343 samples, 11.04%)</title><rect x="62.7937%" y="309" width="11.0396%" height="15" fill="rgb(227,7,12)" fg:x="1951" fg:w="343"/><text x="63.0437%" y="319.50">el0t_64_sync</text></g><g><title>el0t_64_sync_handler (343 samples, 11.04%)</title><rect x="62.7937%" y="293" width="11.0396%" height="15" fill="rgb(245,203,43)" fg:x="1951" fg:w="343"/><text x="63.0437%" y="303.50">el0t_64_sync_han..</text></g><g><title>el0_svc (343 samples, 11.04%)</title><rect x="62.7937%" y="277" width="11.0396%" height="15" fill="rgb(238,205,33)" fg:x="1951" fg:w="343"/><text x="63.0437%" y="287.50">el0_svc</text></g><g><title>do_el0_svc (333 samples, 10.72%)</title><rect x="63.1155%" y="261" width="10.7177%" height="15" fill="rgb(231,56,7)" fg:x="1961" fg:w="333"/><text x="63.3655%" y="271.50">do_el0_svc</text></g><g><title>invoke_syscall.constprop.0 (333 samples, 10.72%)</title><rect x="63.1155%" y="245" width="10.7177%" height="15" fill="rgb(244,186,29)" fg:x="1961" fg:w="333"/><text x="63.3655%" y="255.50">invoke_syscall.c..</text></g><g><title>__arm64_sys_futex (332 samples, 10.69%)</title><rect x="63.1477%" y="229" width="10.6855%" height="15" fill="rgb(234,111,31)" fg:x="1962" fg:w="332"/><text x="63.3977%" y="239.50">__arm64_sys_futex</text></g><g><title>futex_wake (1 samples, 0.03%)</title><rect x="73.8011%" y="213" width="0.0322%" height="15" fill="rgb(241,149,10)" fg:x="2293" fg:w="1"/><text x="74.0511%" y="223.50"></text></g><g><title>tokio::runtime::task::id::Id::next (1 samples, 0.03%)</title><rect x="73.8333%" y="341" width="0.0322%" height="15" fill="rgb(249,206,44)" fg:x="2294" fg:w="1"/><text x="74.0833%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (1 samples, 0.03%)</title><rect x="73.8333%" y="325" width="0.0322%" height="15" fill="rgb(251,153,30)" fg:x="2294" fg:w="1"/><text x="74.0833%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="73.8333%" y="309" width="0.0322%" height="15" fill="rgb(239,152,38)" fg:x="2294" fg:w="1"/><text x="74.0833%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (655 samples, 21.08%)</title><rect x="52.8806%" y="613" width="21.0814%" height="15" fill="rgb(249,139,47)" fg:x="1643" fg:w="655"/><text x="53.1306%" y="623.50">tokio::runtime::scheduler::curren..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}} (655 samples, 21.08%)</title><rect x="52.8806%" y="597" width="21.0814%" height="15" fill="rgb(244,64,35)" fg:x="1643" fg:w="655"/><text x="53.1306%" y="607.50">tokio::runtime::scheduler::curren..</text></g><g><title>tokio::runtime::coop::budget (655 samples, 21.08%)</title><rect x="52.8806%" y="581" width="21.0814%" height="15" fill="rgb(216,46,15)" fg:x="1643" fg:w="655"/><text x="53.1306%" y="591.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (655 samples, 21.08%)</title><rect x="52.8806%" y="565" width="21.0814%" height="15" fill="rgb(250,74,19)" fg:x="1643" fg:w="655"/><text x="53.1306%" y="575.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}}::_{{closure}} (653 samples, 21.02%)</title><rect x="52.9450%" y="549" width="21.0171%" height="15" fill="rgb(249,42,33)" fg:x="1645" fg:w="653"/><text x="53.1950%" y="559.50">tokio::runtime::scheduler::curren..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (653 samples, 21.02%)</title><rect x="52.9450%" y="533" width="21.0171%" height="15" fill="rgb(242,149,17)" fg:x="1645" fg:w="653"/><text x="53.1950%" y="543.50">&lt;core::pin::Pin&lt;P&gt; as core::futur..</text></g><g><title>tokio_slow_read::read_async::_{{closure}} (650 samples, 20.92%)</title><rect x="53.0415%" y="517" width="20.9205%" height="15" fill="rgb(244,29,21)" fg:x="1648" fg:w="650"/><text x="53.2915%" y="527.50">tokio_slow_read::read_async::_{{c..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (649 samples, 20.89%)</title><rect x="53.0737%" y="501" width="20.8883%" height="15" fill="rgb(220,130,37)" fg:x="1649" fg:w="649"/><text x="53.3237%" y="511.50">&lt;futures_util::stream::stream::ne..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (649 samples, 20.89%)</title><rect x="53.0737%" y="485" width="20.8883%" height="15" fill="rgb(211,67,2)" fg:x="1649" fg:w="649"/><text x="53.3237%" y="495.50">futures_util::stream::stream::Str..</text></g><g><title>&lt;tokio_util::io::reader_stream::ReaderStream&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (646 samples, 20.79%)</title><rect x="53.1703%" y="469" width="20.7918%" height="15" fill="rgb(235,68,52)" fg:x="1652" fg:w="646"/><text x="53.4203%" y="479.50">&lt;tokio_util::io::reader_stream::R..</text></g><g><title>tokio_util::util::poll_buf::poll_read_buf (644 samples, 20.73%)</title><rect x="53.2346%" y="453" width="20.7274%" height="15" fill="rgb(246,142,3)" fg:x="1654" fg:w="644"/><text x="53.4846%" y="463.50">tokio_util::util::poll_buf::poll_..</text></g><g><title>&lt;tokio::io::util::take::Take&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (643 samples, 20.70%)</title><rect x="53.2668%" y="437" width="20.6952%" height="15" fill="rgb(241,25,7)" fg:x="1655" fg:w="643"/><text x="53.5168%" y="447.50">&lt;tokio::io::util::take::Take&lt;R&gt; a..</text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_read::AsyncRead&gt;::poll_read (643 samples, 20.70%)</title><rect x="53.2668%" y="421" width="20.6952%" height="15" fill="rgb(242,119,39)" fg:x="1655" fg:w="643"/><text x="53.5168%" y="431.50">&lt;tokio::fs::file::File as tokio::..</text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (356 samples, 11.46%)</title><rect x="62.5040%" y="405" width="11.4580%" height="15" fill="rgb(241,98,45)" fg:x="1942" fg:w="356"/><text x="62.7540%" y="415.50">tokio::runtime::b..</text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (353 samples, 11.36%)</title><rect x="62.6006%" y="389" width="11.3614%" height="15" fill="rgb(254,28,30)" fg:x="1945" fg:w="353"/><text x="62.8506%" y="399.50">tokio::runtime::h..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (353 samples, 11.36%)</title><rect x="62.6006%" y="373" width="11.3614%" height="15" fill="rgb(241,142,54)" fg:x="1945" fg:w="353"/><text x="62.8506%" y="383.50">tokio::runtime::b..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (351 samples, 11.30%)</title><rect x="62.6650%" y="357" width="11.2971%" height="15" fill="rgb(222,85,15)" fg:x="1947" fg:w="351"/><text x="62.9150%" y="367.50">tokio::runtime::b..</text></g><g><title>tokio::runtime::task::unowned (3 samples, 0.10%)</title><rect x="73.8655%" y="341" width="0.0966%" height="15" fill="rgb(210,85,47)" fg:x="2295" fg:w="3"/><text x="74.1155%" y="351.50"></text></g><g><title>tokio::runtime::task::new_task (3 samples, 0.10%)</title><rect x="73.8655%" y="325" width="0.0966%" height="15" fill="rgb(224,206,25)" fg:x="2295" fg:w="3"/><text x="74.1155%" y="335.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (3 samples, 0.10%)</title><rect x="73.8655%" y="309" width="0.0966%" height="15" fill="rgb(243,201,19)" fg:x="2295" fg:w="3"/><text x="74.1155%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (3 samples, 0.10%)</title><rect x="73.8655%" y="293" width="0.0966%" height="15" fill="rgb(236,59,4)" fg:x="2295" fg:w="3"/><text x="74.1155%" y="303.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="73.8977%" y="277" width="0.0644%" height="15" fill="rgb(254,179,45)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="287.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.06%)</title><rect x="73.8977%" y="261" width="0.0644%" height="15" fill="rgb(226,14,10)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.06%)</title><rect x="73.8977%" y="245" width="0.0644%" height="15" fill="rgb(244,27,41)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="73.8977%" y="229" width="0.0644%" height="15" fill="rgb(235,35,32)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="73.8977%" y="213" width="0.0644%" height="15" fill="rgb(218,68,31)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="223.50"></text></g><g><title>__rdl_alloc (2 samples, 0.06%)</title><rect x="73.8977%" y="197" width="0.0644%" height="15" fill="rgb(207,120,37)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="207.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.06%)</title><rect x="73.8977%" y="181" width="0.0644%" height="15" fill="rgb(227,98,0)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="191.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (2 samples, 0.06%)</title><rect x="73.8977%" y="165" width="0.0644%" height="15" fill="rgb(207,7,3)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="175.50"></text></g><g><title>__posix_memalign (2 samples, 0.06%)</title><rect x="73.8977%" y="149" width="0.0644%" height="15" fill="rgb(206,98,19)" fg:x="2296" fg:w="2"/><text x="74.1477%" y="159.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="73.9620%" y="581" width="0.0322%" height="15" fill="rgb(217,5,26)" fg:x="2298" fg:w="1"/><text x="74.2120%" y="591.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="73.9620%" y="565" width="0.0322%" height="15" fill="rgb(235,190,38)" fg:x="2298" fg:w="1"/><text x="74.2120%" y="575.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="73.9620%" y="549" width="0.0322%" height="15" fill="rgb(247,86,24)" fg:x="2298" fg:w="1"/><text x="74.2120%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="73.9620%" y="533" width="0.0322%" height="15" fill="rgb(205,101,16)" fg:x="2298" fg:w="1"/><text x="74.2120%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (12 samples, 0.39%)</title><rect x="73.9942%" y="501" width="0.3862%" height="15" fill="rgb(246,168,33)" fg:x="2299" fg:w="12"/><text x="74.2442%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.39%)</title><rect x="73.9942%" y="485" width="0.3862%" height="15" fill="rgb(231,114,1)" fg:x="2299" fg:w="12"/><text x="74.2442%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (12 samples, 0.39%)</title><rect x="73.9942%" y="469" width="0.3862%" height="15" fill="rgb(207,184,53)" fg:x="2299" fg:w="12"/><text x="74.2442%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (12 samples, 0.39%)</title><rect x="73.9942%" y="453" width="0.3862%" height="15" fill="rgb(224,95,51)" fg:x="2299" fg:w="12"/><text x="74.2442%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.39%)</title><rect x="73.9942%" y="437" width="0.3862%" height="15" fill="rgb(212,188,45)" fg:x="2299" fg:w="12"/><text x="74.2442%" y="447.50"></text></g><g><title>__aarch64_swp4_rel (12 samples, 0.39%)</title><rect x="73.9942%" y="421" width="0.3862%" height="15" fill="rgb(223,154,38)" fg:x="2299" fg:w="12"/><text x="74.2442%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.10%)</title><rect x="74.3804%" y="501" width="0.0966%" height="15" fill="rgb(251,22,52)" fg:x="2311" fg:w="3"/><text x="74.6304%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.10%)</title><rect x="74.3804%" y="485" width="0.0966%" height="15" fill="rgb(229,209,22)" fg:x="2311" fg:w="3"/><text x="74.6304%" y="495.50"></text></g><g><title>__aarch64_cas8_acq_rel (3 samples, 0.10%)</title><rect x="74.3804%" y="469" width="0.0966%" height="15" fill="rgb(234,138,34)" fg:x="2311" fg:w="3"/><text x="74.6304%" y="479.50"></text></g><g><title>std::sync::poison::Flag::get (15 samples, 0.48%)</title><rect x="74.4770%" y="485" width="0.4828%" height="15" fill="rgb(212,95,11)" fg:x="2314" fg:w="15"/><text x="74.7270%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (15 samples, 0.48%)</title><rect x="74.4770%" y="469" width="0.4828%" height="15" fill="rgb(240,179,47)" fg:x="2314" fg:w="15"/><text x="74.7270%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.48%)</title><rect x="74.4770%" y="453" width="0.4828%" height="15" fill="rgb(240,163,11)" fg:x="2314" fg:w="15"/><text x="74.7270%" y="463.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.03%)</title><rect x="74.9920%" y="373" width="0.0322%" height="15" fill="rgb(236,37,12)" fg:x="2330" fg:w="1"/><text x="75.2420%" y="383.50"></text></g><g><title>blkcg_maybe_throttle_current (1 samples, 0.03%)</title><rect x="75.0241%" y="373" width="0.0322%" height="15" fill="rgb(232,164,16)" fg:x="2331" fg:w="1"/><text x="75.2741%" y="383.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="75.0885%" y="261" width="0.0322%" height="15" fill="rgb(244,205,15)" fg:x="2333" fg:w="1"/><text x="75.3385%" y="271.50"></text></g><g><title>futex_wait_queue (2 samples, 0.06%)</title><rect x="75.0885%" y="277" width="0.0644%" height="15" fill="rgb(223,117,47)" fg:x="2333" fg:w="2"/><text x="75.3385%" y="287.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="75.1207%" y="261" width="0.0322%" height="15" fill="rgb(244,107,35)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="271.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="75.1207%" y="245" width="0.0322%" height="15" fill="rgb(205,140,8)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="255.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.03%)</title><rect x="75.1207%" y="229" width="0.0322%" height="15" fill="rgb(228,84,46)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="239.50"></text></g><g><title>el1h_64_irq (1 samples, 0.03%)</title><rect x="75.1207%" y="213" width="0.0322%" height="15" fill="rgb(254,188,9)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="223.50"></text></g><g><title>el1h_64_irq_handler (1 samples, 0.03%)</title><rect x="75.1207%" y="197" width="0.0322%" height="15" fill="rgb(206,112,54)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="207.50"></text></g><g><title>el1_interrupt (1 samples, 0.03%)</title><rect x="75.1207%" y="181" width="0.0322%" height="15" fill="rgb(216,84,49)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="191.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="75.1207%" y="165" width="0.0322%" height="15" fill="rgb(214,194,35)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="175.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="75.1207%" y="149" width="0.0322%" height="15" fill="rgb(249,28,3)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="159.50"></text></g><g><title>call_on_irq_stack (1 samples, 0.03%)</title><rect x="75.1207%" y="133" width="0.0322%" height="15" fill="rgb(222,56,52)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="143.50"></text></g><g><title>____do_softirq (1 samples, 0.03%)</title><rect x="75.1207%" y="117" width="0.0322%" height="15" fill="rgb(245,217,50)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="127.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="75.1207%" y="101" width="0.0322%" height="15" fill="rgb(213,201,24)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="111.50"></text></g><g><title>handle_softirqs (1 samples, 0.03%)</title><rect x="75.1207%" y="85" width="0.0322%" height="15" fill="rgb(248,116,28)" fg:x="2334" fg:w="1"/><text x="75.3707%" y="95.50"></text></g><g><title>syscall (7 samples, 0.23%)</title><rect x="74.9598%" y="437" width="0.2253%" height="15" fill="rgb(219,72,43)" fg:x="2329" fg:w="7"/><text x="75.2098%" y="447.50"></text></g><g><title>el0t_64_sync (7 samples, 0.23%)</title><rect x="74.9598%" y="421" width="0.2253%" height="15" fill="rgb(209,138,14)" fg:x="2329" fg:w="7"/><text x="75.2098%" y="431.50"></text></g><g><title>el0t_64_sync_handler (7 samples, 0.23%)</title><rect x="74.9598%" y="405" width="0.2253%" height="15" fill="rgb(222,18,33)" fg:x="2329" fg:w="7"/><text x="75.2098%" y="415.50"></text></g><g><title>el0_svc (7 samples, 0.23%)</title><rect x="74.9598%" y="389" width="0.2253%" height="15" fill="rgb(213,199,7)" fg:x="2329" fg:w="7"/><text x="75.2098%" y="399.50"></text></g><g><title>do_el0_svc (4 samples, 0.13%)</title><rect x="75.0563%" y="373" width="0.1287%" height="15" fill="rgb(250,110,10)" fg:x="2332" fg:w="4"/><text x="75.3063%" y="383.50"></text></g><g><title>invoke_syscall.constprop.0 (4 samples, 0.13%)</title><rect x="75.0563%" y="357" width="0.1287%" height="15" fill="rgb(248,123,6)" fg:x="2332" fg:w="4"/><text x="75.3063%" y="367.50"></text></g><g><title>__arm64_sys_futex (3 samples, 0.10%)</title><rect x="75.0885%" y="341" width="0.0966%" height="15" fill="rgb(206,91,31)" fg:x="2333" fg:w="3"/><text x="75.3385%" y="351.50"></text></g><g><title>do_futex (3 samples, 0.10%)</title><rect x="75.0885%" y="325" width="0.0966%" height="15" fill="rgb(211,154,13)" fg:x="2333" fg:w="3"/><text x="75.3385%" y="335.50"></text></g><g><title>futex_wait (3 samples, 0.10%)</title><rect x="75.0885%" y="309" width="0.0966%" height="15" fill="rgb(225,148,7)" fg:x="2333" fg:w="3"/><text x="75.3385%" y="319.50"></text></g><g><title>__futex_wait (3 samples, 0.10%)</title><rect x="75.0885%" y="293" width="0.0966%" height="15" fill="rgb(220,160,43)" fg:x="2333" fg:w="3"/><text x="75.3385%" y="303.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="75.1529%" y="277" width="0.0322%" height="15" fill="rgb(213,52,39)" fg:x="2335" fg:w="1"/><text x="75.4029%" y="287.50"></text></g><g><title>std::sync::condvar::Condvar::wait (23 samples, 0.74%)</title><rect x="74.4770%" y="501" width="0.7403%" height="15" fill="rgb(243,137,7)" fg:x="2314" fg:w="23"/><text x="74.7270%" y="511.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (8 samples, 0.26%)</title><rect x="74.9598%" y="485" width="0.2575%" height="15" fill="rgb(230,79,13)" fg:x="2329" fg:w="8"/><text x="75.2098%" y="495.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (8 samples, 0.26%)</title><rect x="74.9598%" y="469" width="0.2575%" height="15" fill="rgb(247,105,23)" fg:x="2329" fg:w="8"/><text x="75.2098%" y="479.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (8 samples, 0.26%)</title><rect x="74.9598%" y="453" width="0.2575%" height="15" fill="rgb(223,179,41)" fg:x="2329" fg:w="8"/><text x="75.2098%" y="463.50"></text></g><g><title>syscall@plt (1 samples, 0.03%)</title><rect x="75.1851%" y="437" width="0.0322%" height="15" fill="rgb(218,9,34)" fg:x="2336" fg:w="1"/><text x="75.4351%" y="447.50"></text></g><g><title>tokio::runtime::driver::Driver::park (39 samples, 1.26%)</title><rect x="73.9942%" y="565" width="1.2552%" height="15" fill="rgb(222,106,8)" fg:x="2299" fg:w="39"/><text x="74.2442%" y="575.50"></text></g><g><title>tokio::runtime::driver::IoStack::park (39 samples, 1.26%)</title><rect x="73.9942%" y="549" width="1.2552%" height="15" fill="rgb(211,220,0)" fg:x="2299" fg:w="39"/><text x="74.2442%" y="559.50"></text></g><g><title>tokio::runtime::park::ParkThread::park (39 samples, 1.26%)</title><rect x="73.9942%" y="533" width="1.2552%" height="15" fill="rgb(229,52,16)" fg:x="2299" fg:w="39"/><text x="74.2442%" y="543.50"></text></g><g><title>tokio::runtime::park::Inner::park (39 samples, 1.26%)</title><rect x="73.9942%" y="517" width="1.2552%" height="15" fill="rgb(212,155,18)" fg:x="2299" fg:w="39"/><text x="74.2442%" y="527.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="75.2173%" y="501" width="0.0322%" height="15" fill="rgb(242,21,14)" fg:x="2337" fg:w="1"/><text x="75.4673%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="75.2173%" y="485" width="0.0322%" height="15" fill="rgb(222,19,48)" fg:x="2337" fg:w="1"/><text x="75.4673%" y="495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.03%)</title><rect x="75.2173%" y="469" width="0.0322%" height="15" fill="rgb(232,45,27)" fg:x="2337" fg:w="1"/><text x="75.4673%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.03%)</title><rect x="75.2173%" y="453" width="0.0322%" height="15" fill="rgb(249,103,42)" fg:x="2337" fg:w="1"/><text x="75.4673%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="75.2173%" y="437" width="0.0322%" height="15" fill="rgb(246,81,33)" fg:x="2337" fg:w="1"/><text x="75.4673%" y="447.50"></text></g><g><title>__aarch64_cas4_acq (1 samples, 0.03%)</title><rect x="75.2173%" y="421" width="0.0322%" height="15" fill="rgb(252,33,42)" fg:x="2337" fg:w="1"/><text x="75.4673%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (53 samples, 1.71%)</title><rect x="73.9620%" y="613" width="1.7058%" height="15" fill="rgb(209,212,41)" fg:x="2298" fg:w="53"/><text x="74.2120%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (53 samples, 1.71%)</title><rect x="73.9620%" y="597" width="1.7058%" height="15" fill="rgb(207,154,6)" fg:x="2298" fg:w="53"/><text x="74.2120%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park::_{{closure}} (52 samples, 1.67%)</title><rect x="73.9942%" y="581" width="1.6736%" height="15" fill="rgb(223,64,47)" fg:x="2299" fg:w="52"/><text x="74.2442%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (13 samples, 0.42%)</title><rect x="75.2494%" y="565" width="0.4184%" height="15" fill="rgb(211,161,38)" fg:x="2338" fg:w="13"/><text x="75.4994%" y="575.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (13 samples, 0.42%)</title><rect x="75.2494%" y="549" width="0.4184%" height="15" fill="rgb(219,138,40)" fg:x="2338" fg:w="13"/><text x="75.4994%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (13 samples, 0.42%)</title><rect x="75.2494%" y="533" width="0.4184%" height="15" fill="rgb(241,228,46)" fg:x="2338" fg:w="13"/><text x="75.4994%" y="543.50"></text></g><g><title>core::cell::BorrowRefMut::new (13 samples, 0.42%)</title><rect x="75.2494%" y="517" width="0.4184%" height="15" fill="rgb(223,209,38)" fg:x="2338" fg:w="13"/><text x="75.4994%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (13 samples, 0.42%)</title><rect x="75.2494%" y="501" width="0.4184%" height="15" fill="rgb(236,164,45)" fg:x="2338" fg:w="13"/><text x="75.4994%" y="511.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (716 samples, 23.04%)</title><rect x="52.6875%" y="837" width="23.0447%" height="15" fill="rgb(231,15,5)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="847.50">tokio::runtime::runtime::Runtime::blo..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (716 samples, 23.04%)</title><rect x="52.6875%" y="821" width="23.0447%" height="15" fill="rgb(252,35,15)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="831.50">tokio::runtime::runtime::Runtime::blo..</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on (716 samples, 23.04%)</title><rect x="52.6875%" y="805" width="23.0447%" height="15" fill="rgb(248,181,18)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="815.50">tokio::runtime::scheduler::current_th..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (716 samples, 23.04%)</title><rect x="52.6875%" y="789" width="23.0447%" height="15" fill="rgb(233,39,42)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="799.50">tokio::runtime::context::runtime::ent..</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on::_{{closure}} (716 samples, 23.04%)</title><rect x="52.6875%" y="773" width="23.0447%" height="15" fill="rgb(238,110,33)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="783.50">tokio::runtime::scheduler::current_th..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (716 samples, 23.04%)</title><rect x="52.6875%" y="757" width="23.0447%" height="15" fill="rgb(233,195,10)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="767.50">tokio::runtime::scheduler::current_th..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter (716 samples, 23.04%)</title><rect x="52.6875%" y="741" width="23.0447%" height="15" fill="rgb(254,105,3)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="751.50">tokio::runtime::scheduler::current_th..</text></g><g><title>tokio::runtime::context::set_scheduler (716 samples, 23.04%)</title><rect x="52.6875%" y="725" width="23.0447%" height="15" fill="rgb(221,225,9)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="735.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (716 samples, 23.04%)</title><rect x="52.6875%" y="709" width="23.0447%" height="15" fill="rgb(224,227,45)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="719.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (716 samples, 23.04%)</title><rect x="52.6875%" y="693" width="23.0447%" height="15" fill="rgb(229,198,43)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="703.50">std::thread::local::LocalKey&lt;T&gt;::try_..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (716 samples, 23.04%)</title><rect x="52.6875%" y="677" width="23.0447%" height="15" fill="rgb(206,209,35)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="687.50">tokio::runtime::context::set_schedule..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (716 samples, 23.04%)</title><rect x="52.6875%" y="661" width="23.0447%" height="15" fill="rgb(245,195,53)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="671.50">tokio::runtime::context::scoped::Scop..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter::_{{closure}} (716 samples, 23.04%)</title><rect x="52.6875%" y="645" width="23.0447%" height="15" fill="rgb(240,92,26)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="655.50">tokio::runtime::scheduler::current_th..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}} (716 samples, 23.04%)</title><rect x="52.6875%" y="629" width="23.0447%" height="15" fill="rgb(207,40,23)" fg:x="1637" fg:w="716"/><text x="52.9375%" y="639.50">tokio::runtime::scheduler::current_th..</text></g><g><title>tokio::runtime::scheduler::current_thread::Handle::reset_woken (2 samples, 0.06%)</title><rect x="75.6678%" y="613" width="0.0644%" height="15" fill="rgb(223,111,35)" fg:x="2351" fg:w="2"/><text x="75.9178%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.03%)</title><rect x="75.7000%" y="597" width="0.0322%" height="15" fill="rgb(229,147,28)" fg:x="2352" fg:w="1"/><text x="75.9500%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.03%)</title><rect x="75.7000%" y="581" width="0.0322%" height="15" fill="rgb(211,29,28)" fg:x="2352" fg:w="1"/><text x="75.9500%" y="591.50"></text></g><g><title>__aarch64_swp1_acq_rel (1 samples, 0.03%)</title><rect x="75.7000%" y="565" width="0.0322%" height="15" fill="rgb(228,72,33)" fg:x="2352" fg:w="1"/><text x="75.9500%" y="575.50"></text></g><g><title>tokio-slow-read (1,463 samples, 47.09%)</title><rect x="32.4751%" y="869" width="47.0872%" height="15" fill="rgb(205,214,31)" fg:x="1009" fg:w="1463"/><text x="32.7251%" y="879.50">tokio-slow-read</text></g><g><title>tokio_slow_read::main (835 samples, 26.87%)</title><rect x="52.6875%" y="853" width="26.8748%" height="15" fill="rgb(224,111,15)" fg:x="1637" fg:w="835"/><text x="52.9375%" y="863.50">tokio_slow_read::main</text></g><g><title>tokio_slow_read::copy_buf (119 samples, 3.83%)</title><rect x="75.7322%" y="837" width="3.8301%" height="15" fill="rgb(253,21,26)" fg:x="2353" fg:w="119"/><text x="75.9822%" y="847.50">toki..</text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (119 samples, 3.83%)</title><rect x="75.7322%" y="821" width="3.8301%" height="15" fill="rgb(245,139,43)" fg:x="2353" fg:w="119"/><text x="75.9822%" y="831.50">toki..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (119 samples, 3.83%)</title><rect x="75.7322%" y="805" width="3.8301%" height="15" fill="rgb(252,170,7)" fg:x="2353" fg:w="119"/><text x="75.9822%" y="815.50">core..</text></g><g><title>core::intrinsics::copy_nonoverlapping (119 samples, 3.83%)</title><rect x="75.7322%" y="789" width="3.8301%" height="15" fill="rgb(231,118,14)" fg:x="2353" fg:w="119"/><text x="75.9822%" y="799.50">core..</text></g><g><title>__memset_zva64 (119 samples, 3.83%)</title><rect x="75.7322%" y="773" width="3.8301%" height="15" fill="rgb(238,83,0)" fg:x="2353" fg:w="119"/><text x="75.9822%" y="783.50">__me..</text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (1 samples, 0.03%)</title><rect x="79.5623%" y="853" width="0.0322%" height="15" fill="rgb(221,39,39)" fg:x="2472" fg:w="1"/><text x="79.8123%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="79.5945%" y="837" width="0.0322%" height="15" fill="rgb(222,119,46)" fg:x="2473" fg:w="1"/><text x="79.8445%" y="847.50"></text></g><g><title>&lt;flume::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.5945%" y="821" width="0.0322%" height="15" fill="rgb(222,165,49)" fg:x="2473" fg:w="1"/><text x="79.8445%" y="831.50"></text></g><g><title>flume::Receiver&lt;T&gt;::try_recv (1 samples, 0.03%)</title><rect x="79.5945%" y="805" width="0.0322%" height="15" fill="rgb(219,113,52)" fg:x="2473" fg:w="1"/><text x="79.8445%" y="815.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (1 samples, 0.03%)</title><rect x="79.5945%" y="789" width="0.0322%" height="15" fill="rgb(214,7,15)" fg:x="2473" fg:w="1"/><text x="79.8445%" y="799.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (1 samples, 0.03%)</title><rect x="79.5945%" y="773" width="0.0322%" height="15" fill="rgb(235,32,4)" fg:x="2473" fg:w="1"/><text x="79.8445%" y="783.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (1 samples, 0.03%)</title><rect x="79.5945%" y="757" width="0.0322%" height="15" fill="rgb(238,90,54)" fg:x="2473" fg:w="1"/><text x="79.8445%" y="767.50"></text></g><g><title>__GI___libc_free (2 samples, 0.06%)</title><rect x="79.6266%" y="837" width="0.0644%" height="15" fill="rgb(213,208,19)" fg:x="2474" fg:w="2"/><text x="79.8766%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.16%)</title><rect x="79.5945%" y="853" width="0.1609%" height="15" fill="rgb(233,156,4)" fg:x="2473" fg:w="5"/><text x="79.8445%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.06%)</title><rect x="79.6910%" y="837" width="0.0644%" height="15" fill="rgb(207,194,5)" fg:x="2476" fg:w="2"/><text x="79.9410%" y="847.50"></text></g><g><title>__GI___clock_gettime (25 samples, 0.80%)</title><rect x="79.7554%" y="853" width="0.8046%" height="15" fill="rgb(206,111,30)" fg:x="2478" fg:w="25"/><text x="80.0054%" y="863.50"></text></g><g><title>__kernel_clock_gettime (25 samples, 0.80%)</title><rect x="79.7554%" y="837" width="0.8046%" height="15" fill="rgb(243,70,54)" fg:x="2478" fg:w="25"/><text x="80.0054%" y="847.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.03%)</title><rect x="80.5600%" y="277" width="0.0322%" height="15" fill="rgb(242,28,8)" fg:x="2503" fg:w="1"/><text x="80.8100%" y="287.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="80.5600%" y="261" width="0.0322%" height="15" fill="rgb(219,106,18)" fg:x="2503" fg:w="1"/><text x="80.8100%" y="271.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.03%)</title><rect x="80.5600%" y="245" width="0.0322%" height="15" fill="rgb(244,222,10)" fg:x="2503" fg:w="1"/><text x="80.8100%" y="255.50"></text></g><g><title>folios_put_refs (1 samples, 0.03%)</title><rect x="80.5600%" y="229" width="0.0322%" height="15" fill="rgb(236,179,52)" fg:x="2503" fg:w="1"/><text x="80.8100%" y="239.50"></text></g><g><title>glommio::executor::LocalExecutor::new (3 samples, 0.10%)</title><rect x="80.5600%" y="629" width="0.0966%" height="15" fill="rgb(213,23,39)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="639.50"></text></g><g><title>glommio::reactor::Reactor::new (3 samples, 0.10%)</title><rect x="80.5600%" y="613" width="0.0966%" height="15" fill="rgb(238,48,10)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="623.50"></text></g><g><title>glommio::sys::uring::Reactor::new (3 samples, 0.10%)</title><rect x="80.5600%" y="597" width="0.0966%" height="15" fill="rgb(251,196,23)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="607.50"></text></g><g><title>glommio::iou::registrar::Registrar::register_buffers_by_ref (3 samples, 0.10%)</title><rect x="80.5600%" y="581" width="0.0966%" height="15" fill="rgb(250,152,24)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="591.50"></text></g><g><title>io_uring_register_buffers (3 samples, 0.10%)</title><rect x="80.5600%" y="565" width="0.0966%" height="15" fill="rgb(209,150,17)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="575.50"></text></g><g><title>__sys_io_uring_register (3 samples, 0.10%)</title><rect x="80.5600%" y="549" width="0.0966%" height="15" fill="rgb(234,202,34)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="559.50"></text></g><g><title>syscall (3 samples, 0.10%)</title><rect x="80.5600%" y="533" width="0.0966%" height="15" fill="rgb(253,148,53)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="543.50"></text></g><g><title>el0t_64_sync (3 samples, 0.10%)</title><rect x="80.5600%" y="517" width="0.0966%" height="15" fill="rgb(218,129,16)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="527.50"></text></g><g><title>el0t_64_sync_handler (3 samples, 0.10%)</title><rect x="80.5600%" y="501" width="0.0966%" height="15" fill="rgb(216,85,19)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="511.50"></text></g><g><title>el0_svc (3 samples, 0.10%)</title><rect x="80.5600%" y="485" width="0.0966%" height="15" fill="rgb(235,228,7)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="495.50"></text></g><g><title>do_el0_svc (3 samples, 0.10%)</title><rect x="80.5600%" y="469" width="0.0966%" height="15" fill="rgb(245,175,0)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="479.50"></text></g><g><title>invoke_syscall.constprop.0 (3 samples, 0.10%)</title><rect x="80.5600%" y="453" width="0.0966%" height="15" fill="rgb(208,168,36)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="463.50"></text></g><g><title>__arm64_sys_io_uring_register (3 samples, 0.10%)</title><rect x="80.5600%" y="437" width="0.0966%" height="15" fill="rgb(246,171,24)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="447.50"></text></g><g><title>io_sqe_buffers_register (3 samples, 0.10%)</title><rect x="80.5600%" y="421" width="0.0966%" height="15" fill="rgb(215,142,24)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="431.50"></text></g><g><title>io_sqe_buffer_register (3 samples, 0.10%)</title><rect x="80.5600%" y="405" width="0.0966%" height="15" fill="rgb(250,187,7)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="415.50"></text></g><g><title>io_pin_pages (3 samples, 0.10%)</title><rect x="80.5600%" y="389" width="0.0966%" height="15" fill="rgb(228,66,33)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="399.50"></text></g><g><title>pin_user_pages_fast (3 samples, 0.10%)</title><rect x="80.5600%" y="373" width="0.0966%" height="15" fill="rgb(234,215,21)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="383.50"></text></g><g><title>gup_fast_fallback (3 samples, 0.10%)</title><rect x="80.5600%" y="357" width="0.0966%" height="15" fill="rgb(222,191,20)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="367.50"></text></g><g><title>__gup_longterm_locked (3 samples, 0.10%)</title><rect x="80.5600%" y="341" width="0.0966%" height="15" fill="rgb(245,79,54)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="351.50"></text></g><g><title>__get_user_pages (3 samples, 0.10%)</title><rect x="80.5600%" y="325" width="0.0966%" height="15" fill="rgb(240,10,37)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="335.50"></text></g><g><title>handle_mm_fault (3 samples, 0.10%)</title><rect x="80.5600%" y="309" width="0.0966%" height="15" fill="rgb(214,192,32)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="319.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.10%)</title><rect x="80.5600%" y="293" width="0.0966%" height="15" fill="rgb(209,36,54)" fg:x="2503" fg:w="3"/><text x="80.8100%" y="303.50"></text></g><g><title>vma_alloc_zeroed_movable_folio (2 samples, 0.06%)</title><rect x="80.5922%" y="277" width="0.0644%" height="15" fill="rgb(220,10,11)" fg:x="2504" fg:w="2"/><text x="80.8422%" y="287.50"></text></g><g><title>vma_alloc_folio_noprof (2 samples, 0.06%)</title><rect x="80.5922%" y="261" width="0.0644%" height="15" fill="rgb(221,106,17)" fg:x="2504" fg:w="2"/><text x="80.8422%" y="271.50"></text></g><g><title>folio_alloc_mpol_noprof (2 samples, 0.06%)</title><rect x="80.5922%" y="245" width="0.0644%" height="15" fill="rgb(251,142,44)" fg:x="2504" fg:w="2"/><text x="80.8422%" y="255.50"></text></g><g><title>alloc_pages_mpol_noprof (2 samples, 0.06%)</title><rect x="80.5922%" y="229" width="0.0644%" height="15" fill="rgb(238,13,15)" fg:x="2504" fg:w="2"/><text x="80.8422%" y="239.50"></text></g><g><title>__alloc_pages_noprof (2 samples, 0.06%)</title><rect x="80.5922%" y="213" width="0.0644%" height="15" fill="rgb(208,107,27)" fg:x="2504" fg:w="2"/><text x="80.8422%" y="223.50"></text></g><g><title>clear_page (2 samples, 0.06%)</title><rect x="80.5922%" y="197" width="0.0644%" height="15" fill="rgb(205,136,37)" fg:x="2504" fg:w="2"/><text x="80.8422%" y="207.50"></text></g><g><title>&lt;glommio::task::join_handle::JoinHandle&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="80.6566%" y="565" width="0.0322%" height="15" fill="rgb(250,205,27)" fg:x="2506" fg:w="1"/><text x="80.9066%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="80.7210%" y="549" width="0.0322%" height="15" fill="rgb(210,80,43)" fg:x="2508" fg:w="1"/><text x="80.9710%" y="559.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.03%)</title><rect x="80.7210%" y="533" width="0.0322%" height="15" fill="rgb(247,160,36)" fg:x="2508" fg:w="1"/><text x="80.9710%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="80.7210%" y="517" width="0.0322%" height="15" fill="rgb(234,13,49)" fg:x="2508" fg:w="1"/><text x="80.9710%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="80.7531%" y="533" width="0.0322%" height="15" fill="rgb(234,122,0)" fg:x="2509" fg:w="1"/><text x="81.0031%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="80.7531%" y="517" width="0.0322%" height="15" fill="rgb(207,146,38)" fg:x="2509" fg:w="1"/><text x="81.0031%" y="527.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="80.7531%" y="501" width="0.0322%" height="15" fill="rgb(207,177,25)" fg:x="2509" fg:w="1"/><text x="81.0031%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="80.7531%" y="485" width="0.0322%" height="15" fill="rgb(211,178,42)" fg:x="2509" fg:w="1"/><text x="81.0031%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;glommio::reactor::Reactor&gt;&gt; (1 samples, 0.03%)</title><rect x="80.7853%" y="453" width="0.0322%" height="15" fill="rgb(230,69,54)" fg:x="2510" fg:w="1"/><text x="81.0353%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="80.7853%" y="437" width="0.0322%" height="15" fill="rgb(214,135,41)" fg:x="2510" fg:w="1"/><text x="81.0353%" y="447.50"></text></g><g><title>glommio::reactor::Reactor::read_dma (1 samples, 0.03%)</title><rect x="80.8175%" y="453" width="0.0322%" height="15" fill="rgb(237,67,25)" fg:x="2511" fg:w="1"/><text x="81.0675%" y="463.50"></text></g><g><title>glommio::reactor::Reactor::new_source (1 samples, 0.03%)</title><rect x="80.8175%" y="437" width="0.0322%" height="15" fill="rgb(222,189,50)" fg:x="2511" fg:w="1"/><text x="81.0675%" y="447.50"></text></g><g><title>glommio::executor::ExecutorProxy::current_task_queue (1 samples, 0.03%)</title><rect x="80.8175%" y="421" width="0.0322%" height="15" fill="rgb(245,148,34)" fg:x="2511" fg:w="1"/><text x="81.0675%" y="431.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="80.8175%" y="405" width="0.0322%" height="15" fill="rgb(222,29,6)" fg:x="2511" fg:w="1"/><text x="81.0675%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="80.8175%" y="389" width="0.0322%" height="15" fill="rgb(221,189,43)" fg:x="2511" fg:w="1"/><text x="81.0675%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="80.8175%" y="373" width="0.0322%" height="15" fill="rgb(207,36,27)" fg:x="2511" fg:w="1"/><text x="81.0675%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="80.8175%" y="357" width="0.0322%" height="15" fill="rgb(217,90,24)" fg:x="2511" fg:w="1"/><text x="81.0675%" y="367.50"></text></g><g><title>glommio::executor::LocalExecutor::run_task_queues (6 samples, 0.19%)</title><rect x="80.6888%" y="565" width="0.1931%" height="15" fill="rgb(224,66,35)" fg:x="2507" fg:w="6"/><text x="80.9388%" y="575.50"></text></g><g><title>glommio::executor::LocalExecutor::run_one_task_queue (4 samples, 0.13%)</title><rect x="80.7531%" y="549" width="0.1287%" height="15" fill="rgb(221,13,50)" fg:x="2509" fg:w="4"/><text x="81.0031%" y="559.50"></text></g><g><title>glommio::task::task_impl::Task::run (3 samples, 0.10%)</title><rect x="80.7853%" y="533" width="0.0966%" height="15" fill="rgb(236,68,49)" fg:x="2510" fg:w="3"/><text x="81.0353%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::run (3 samples, 0.10%)</title><rect x="80.7853%" y="517" width="0.0966%" height="15" fill="rgb(229,146,28)" fg:x="2510" fg:w="3"/><text x="81.0353%" y="527.50"></text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::_{{closure}}::_{{closure}} (3 samples, 0.10%)</title><rect x="80.7853%" y="501" width="0.0966%" height="15" fill="rgb(225,31,38)" fg:x="2510" fg:w="3"/><text x="81.0353%" y="511.50"></text></g><g><title>tokio_slow_read::read_glommio_dma::_{{closure}}::_{{closure}} (3 samples, 0.10%)</title><rect x="80.7853%" y="485" width="0.0966%" height="15" fill="rgb(250,208,3)" fg:x="2510" fg:w="3"/><text x="81.0353%" y="495.50"></text></g><g><title>glommio::io::dma_file::DmaFile::read_at_aligned::_{{closure}} (3 samples, 0.10%)</title><rect x="80.7853%" y="469" width="0.0966%" height="15" fill="rgb(246,54,23)" fg:x="2510" fg:w="3"/><text x="81.0353%" y="479.50"></text></g><g><title>glommio::sys::source::Source::collect_rw::_{{closure}} (1 samples, 0.03%)</title><rect x="80.8497%" y="453" width="0.0322%" height="15" fill="rgb(243,76,11)" fg:x="2512" fg:w="1"/><text x="81.0997%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="80.8497%" y="437" width="0.0322%" height="15" fill="rgb(245,21,50)" fg:x="2512" fg:w="1"/><text x="81.0997%" y="447.50"></text></g><g><title>glommio::sys::source::Source::collect_rw::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="80.8497%" y="421" width="0.0322%" height="15" fill="rgb(228,9,43)" fg:x="2512" fg:w="1"/><text x="81.0997%" y="431.50"></text></g><g><title>glommio::sys::source::Source::result (1 samples, 0.03%)</title><rect x="80.8497%" y="405" width="0.0322%" height="15" fill="rgb(208,100,47)" fg:x="2512" fg:w="1"/><text x="81.0997%" y="415.50"></text></g><g><title>glommio::reactor::Reactor::process_external_events (1 samples, 0.03%)</title><rect x="80.8819%" y="517" width="0.0322%" height="15" fill="rgb(232,26,8)" fg:x="2513" fg:w="1"/><text x="81.1319%" y="527.50"></text></g><g><title>glommio::reactor::Reactor::process_timers (1 samples, 0.03%)</title><rect x="80.8819%" y="501" width="0.0322%" height="15" fill="rgb(216,166,38)" fg:x="2513" fg:w="1"/><text x="81.1319%" y="511.50"></text></g><g><title>glommio::reactor::Timers::process_timers (1 samples, 0.03%)</title><rect x="80.8819%" y="485" width="0.0322%" height="15" fill="rgb(251,202,51)" fg:x="2513" fg:w="1"/><text x="81.1319%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="80.8819%" y="469" width="0.0322%" height="15" fill="rgb(254,216,34)" fg:x="2513" fg:w="1"/><text x="81.1319%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.03%)</title><rect x="80.8819%" y="453" width="0.0322%" height="15" fill="rgb(251,32,27)" fg:x="2513" fg:w="1"/><text x="81.1319%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.03%)</title><rect x="80.9463%" y="501" width="0.0322%" height="15" fill="rgb(208,127,28)" fg:x="2515" fg:w="1"/><text x="81.1963%" y="511.50"></text></g><g><title>glommio::sys::uring::SleepableRing::prepare_latency_preemption_timer (1 samples, 0.03%)</title><rect x="80.9784%" y="501" width="0.0322%" height="15" fill="rgb(224,137,22)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="511.50"></text></g><g><title>glommio::sys::source::Source::new (1 samples, 0.03%)</title><rect x="80.9784%" y="485" width="0.0322%" height="15" fill="rgb(254,70,32)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="495.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::pin (1 samples, 0.03%)</title><rect x="80.9784%" y="469" width="0.0322%" height="15" fill="rgb(229,75,37)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="479.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="80.9784%" y="453" width="0.0322%" height="15" fill="rgb(252,64,23)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="80.9784%" y="437" width="0.0322%" height="15" fill="rgb(232,162,48)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="80.9784%" y="421" width="0.0322%" height="15" fill="rgb(246,160,12)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="80.9784%" y="405" width="0.0322%" height="15" fill="rgb(247,166,0)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="80.9784%" y="389" width="0.0322%" height="15" fill="rgb(249,219,21)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="80.9784%" y="373" width="0.0322%" height="15" fill="rgb(205,209,3)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="80.9784%" y="357" width="0.0322%" height="15" fill="rgb(243,44,1)" fg:x="2516" fg:w="1"/><text x="81.2284%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;glommio::sys::uring::UringQueueState&gt;&gt; (2 samples, 0.06%)</title><rect x="81.0106%" y="485" width="0.0644%" height="15" fill="rgb(206,159,16)" fg:x="2517" fg:w="2"/><text x="81.2606%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.06%)</title><rect x="81.0106%" y="469" width="0.0644%" height="15" fill="rgb(244,77,30)" fg:x="2517" fg:w="2"/><text x="81.2606%" y="479.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="81.0106%" y="453" width="0.0644%" height="15" fill="rgb(218,69,12)" fg:x="2517" fg:w="2"/><text x="81.2606%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.06%)</title><rect x="81.0106%" y="437" width="0.0644%" height="15" fill="rgb(212,87,7)" fg:x="2517" fg:w="2"/><text x="81.2606%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="81.0750%" y="357" width="0.0322%" height="15" fill="rgb(245,114,25)" fg:x="2519" fg:w="1"/><text x="81.3250%" y="367.50"></text></g><g><title>glommio::sys::source::Source::new (2 samples, 0.06%)</title><rect x="81.0750%" y="485" width="0.0644%" height="15" fill="rgb(210,61,42)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="495.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::pin (2 samples, 0.06%)</title><rect x="81.0750%" y="469" width="0.0644%" height="15" fill="rgb(211,52,33)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="479.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="81.0750%" y="453" width="0.0644%" height="15" fill="rgb(234,58,33)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="81.0750%" y="437" width="0.0644%" height="15" fill="rgb(220,115,36)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.06%)</title><rect x="81.0750%" y="421" width="0.0644%" height="15" fill="rgb(243,153,54)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.06%)</title><rect x="81.0750%" y="405" width="0.0644%" height="15" fill="rgb(251,47,18)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="81.0750%" y="389" width="0.0644%" height="15" fill="rgb(242,102,42)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="81.0750%" y="373" width="0.0644%" height="15" fill="rgb(234,31,38)" fg:x="2519" fg:w="2"/><text x="81.3250%" y="383.50"></text></g><g><title>malloc@plt (1 samples, 0.03%)</title><rect x="81.1072%" y="357" width="0.0322%" height="15" fill="rgb(221,117,51)" fg:x="2520" fg:w="1"/><text x="81.3572%" y="367.50"></text></g><g><title>glommio::sys::uring::SleepableRing::prepare_throughput_preemption_timer (5 samples, 0.16%)</title><rect x="81.0106%" y="501" width="0.1609%" height="15" fill="rgb(212,20,18)" fg:x="2517" fg:w="5"/><text x="81.2606%" y="511.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::free_list::FreeList&lt;core::pin::Pin&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;glommio::sys::source::InnerSource&gt;&gt;&gt;&gt;&gt;::add_source (1 samples, 0.03%)</title><rect x="81.1394%" y="485" width="0.0322%" height="15" fill="rgb(245,133,36)" fg:x="2521" fg:w="1"/><text x="81.3894%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="81.1715%" y="469" width="0.0322%" height="15" fill="rgb(212,6,19)" fg:x="2522" fg:w="1"/><text x="81.4215%" y="479.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.03%)</title><rect x="81.1715%" y="453" width="0.0322%" height="15" fill="rgb(218,1,36)" fg:x="2522" fg:w="1"/><text x="81.4215%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="81.1715%" y="437" width="0.0322%" height="15" fill="rgb(246,84,54)" fg:x="2522" fg:w="1"/><text x="81.4215%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="81.1715%" y="421" width="0.0322%" height="15" fill="rgb(242,110,6)" fg:x="2522" fg:w="1"/><text x="81.4215%" y="431.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="81.1715%" y="405" width="0.0322%" height="15" fill="rgb(214,47,5)" fg:x="2522" fg:w="1"/><text x="81.4215%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="81.1715%" y="389" width="0.0322%" height="15" fill="rgb(218,159,25)" fg:x="2522" fg:w="1"/><text x="81.4215%" y="399.50"></text></g><g><title>glommio::iou::IoUring::peek_for_cqe (1 samples, 0.03%)</title><rect x="81.2037%" y="469" width="0.0322%" height="15" fill="rgb(215,211,28)" fg:x="2523" fg:w="1"/><text x="81.4537%" y="479.50"></text></g><g><title>glommio::iou::completion_queue::CompletionQueue::peek_for_cqe (1 samples, 0.03%)</title><rect x="81.2037%" y="453" width="0.0322%" height="15" fill="rgb(238,59,32)" fg:x="2523" fg:w="1"/><text x="81.4537%" y="463.50"></text></g><g><title>__io_uring_get_cqe (1 samples, 0.03%)</title><rect x="81.2037%" y="437" width="0.0322%" height="15" fill="rgb(226,82,3)" fg:x="2523" fg:w="1"/><text x="81.4537%" y="447.50"></text></g><g><title>_io_uring_get_cqe (1 samples, 0.03%)</title><rect x="81.2037%" y="421" width="0.0322%" height="15" fill="rgb(240,164,32)" fg:x="2523" fg:w="1"/><text x="81.4537%" y="431.50"></text></g><g><title>__io_uring_peek_cqe (1 samples, 0.03%)</title><rect x="81.2037%" y="405" width="0.0322%" height="15" fill="rgb(232,46,7)" fg:x="2523" fg:w="1"/><text x="81.4537%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;glommio::sys::source::InnerSource&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="81.2359%" y="453" width="0.0322%" height="15" fill="rgb(229,129,53)" fg:x="2524" fg:w="1"/><text x="81.4859%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;glommio::sys::source::InnerSource&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="81.2359%" y="437" width="0.0322%" height="15" fill="rgb(234,188,29)" fg:x="2524" fg:w="1"/><text x="81.4859%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="81.2359%" y="421" width="0.0322%" height="15" fill="rgb(246,141,4)" fg:x="2524" fg:w="1"/><text x="81.4859%" y="431.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (4 samples, 0.13%)</title><rect x="81.1715%" y="501" width="0.1287%" height="15" fill="rgb(229,23,39)" fg:x="2522" fg:w="4"/><text x="81.4215%" y="511.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (4 samples, 0.13%)</title><rect x="81.1715%" y="485" width="0.1287%" height="15" fill="rgb(206,12,3)" fg:x="2522" fg:w="4"/><text x="81.4215%" y="495.50"></text></g><g><title>glommio::sys::uring::process_one_event (2 samples, 0.06%)</title><rect x="81.2359%" y="469" width="0.0644%" height="15" fill="rgb(252,226,20)" fg:x="2524" fg:w="2"/><text x="81.4859%" y="479.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::free_list::FreeList&lt;core::pin::Pin&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;glommio::sys::source::InnerSource&gt;&gt;&gt;&gt;&gt;::consume_source (1 samples, 0.03%)</title><rect x="81.2681%" y="453" width="0.0322%" height="15" fill="rgb(216,123,35)" fg:x="2525" fg:w="1"/><text x="81.5181%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="81.3325%" y="453" width="0.0322%" height="15" fill="rgb(212,68,40)" fg:x="2527" fg:w="1"/><text x="81.5825%" y="463.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.03%)</title><rect x="81.3325%" y="437" width="0.0322%" height="15" fill="rgb(254,125,32)" fg:x="2527" fg:w="1"/><text x="81.5825%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="81.3325%" y="421" width="0.0322%" height="15" fill="rgb(253,97,22)" fg:x="2527" fg:w="1"/><text x="81.5825%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="81.3325%" y="405" width="0.0322%" height="15" fill="rgb(241,101,14)" fg:x="2527" fg:w="1"/><text x="81.5825%" y="415.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="81.3325%" y="389" width="0.0322%" height="15" fill="rgb(238,103,29)" fg:x="2527" fg:w="1"/><text x="81.5825%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="81.3325%" y="373" width="0.0322%" height="15" fill="rgb(233,195,47)" fg:x="2527" fg:w="1"/><text x="81.5825%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="81.3647%" y="453" width="0.0322%" height="15" fill="rgb(246,218,30)" fg:x="2528" fg:w="1"/><text x="81.6147%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="81.3647%" y="437" width="0.0322%" height="15" fill="rgb(219,145,47)" fg:x="2528" fg:w="1"/><text x="81.6147%" y="447.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="81.3647%" y="421" width="0.0322%" height="15" fill="rgb(243,12,26)" fg:x="2528" fg:w="1"/><text x="81.6147%" y="431.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="81.3647%" y="405" width="0.0322%" height="15" fill="rgb(214,87,16)" fg:x="2528" fg:w="1"/><text x="81.6147%" y="415.50"></text></g><g><title>glommio::sys::uring::extract_one_chain (1 samples, 0.03%)</title><rect x="81.3968%" y="453" width="0.0322%" height="15" fill="rgb(208,99,42)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="81.3968%" y="437" width="0.0322%" height="15" fill="rgb(253,99,2)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="447.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="81.3968%" y="421" width="0.0322%" height="15" fill="rgb(220,168,23)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="431.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="81.3968%" y="405" width="0.0322%" height="15" fill="rgb(242,38,24)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="81.3968%" y="389" width="0.0322%" height="15" fill="rgb(225,182,9)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.03%)</title><rect x="81.3968%" y="373" width="0.0322%" height="15" fill="rgb(243,178,37)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="81.3968%" y="357" width="0.0322%" height="15" fill="rgb(232,139,19)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.03%)</title><rect x="81.3968%" y="341" width="0.0322%" height="15" fill="rgb(225,201,24)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="81.3968%" y="325" width="0.0322%" height="15" fill="rgb(221,47,46)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="335.50"></text></g><g><title>glommio::sys::uring::extract_one_chain::_{{closure}} (1 samples, 0.03%)</title><rect x="81.3968%" y="309" width="0.0322%" height="15" fill="rgb(249,23,13)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="319.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::free_list::FreeList&lt;core::pin::Pin&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;glommio::sys::source::InnerSource&gt;&gt;&gt;&gt;&gt;::peek_source_mut (1 samples, 0.03%)</title><rect x="81.3968%" y="293" width="0.0322%" height="15" fill="rgb(219,9,5)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="303.50"></text></g><g><title>glommio::sys::uring::extract_one_chain::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="81.3968%" y="277" width="0.0322%" height="15" fill="rgb(254,171,16)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;glommio::sys::source::InnerSource&gt;&gt; (1 samples, 0.03%)</title><rect x="81.3968%" y="261" width="0.0322%" height="15" fill="rgb(230,171,20)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.03%)</title><rect x="81.3968%" y="245" width="0.0322%" height="15" fill="rgb(210,71,41)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="255.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="81.3968%" y="229" width="0.0322%" height="15" fill="rgb(206,173,20)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="81.3968%" y="213" width="0.0322%" height="15" fill="rgb(233,88,34)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.03%)</title><rect x="81.3968%" y="197" width="0.0322%" height="15" fill="rgb(223,209,46)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="207.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="81.3968%" y="181" width="0.0322%" height="15" fill="rgb(250,43,18)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="191.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="81.3968%" y="165" width="0.0322%" height="15" fill="rgb(208,13,10)" fg:x="2529" fg:w="1"/><text x="81.6468%" y="175.50"></text></g><g><title>glommio::sys::uring::fill_sqe (1 samples, 0.03%)</title><rect x="81.4290%" y="453" width="0.0322%" height="15" fill="rgb(212,200,36)" fg:x="2530" fg:w="1"/><text x="81.6790%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="81.4290%" y="437" width="0.0322%" height="15" fill="rgb(225,90,30)" fg:x="2530" fg:w="1"/><text x="81.6790%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;glommio::sys::uring::UringBufferAllocator&gt;&gt; (1 samples, 0.03%)</title><rect x="81.4290%" y="421" width="0.0322%" height="15" fill="rgb(236,182,39)" fg:x="2530" fg:w="1"/><text x="81.6790%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="81.4290%" y="405" width="0.0322%" height="15" fill="rgb(212,144,35)" fg:x="2530" fg:w="1"/><text x="81.6790%" y="415.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (1 samples, 0.03%)</title><rect x="81.4290%" y="389" width="0.0322%" height="15" fill="rgb(228,63,44)" fg:x="2530" fg:w="1"/><text x="81.6790%" y="399.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (5 samples, 0.16%)</title><rect x="81.3325%" y="469" width="0.1609%" height="15" fill="rgb(228,109,6)" fg:x="2527" fg:w="5"/><text x="81.5825%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="81.4612%" y="453" width="0.0322%" height="15" fill="rgb(238,117,24)" fg:x="2531" fg:w="1"/><text x="81.7112%" y="463.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="81.4612%" y="437" width="0.0322%" height="15" fill="rgb(242,26,26)" fg:x="2531" fg:w="1"/><text x="81.7112%" y="447.50"></text></g><g><title>__io_uring_add_tctx_node_from_submit (4 samples, 0.13%)</title><rect x="81.9118%" y="245" width="0.1287%" height="15" fill="rgb(221,92,48)" fg:x="2545" fg:w="4"/><text x="82.1618%" y="255.50"></text></g><g><title>__io_uring_add_tctx_node (4 samples, 0.13%)</title><rect x="81.9118%" y="229" width="0.1287%" height="15" fill="rgb(209,209,32)" fg:x="2545" fg:w="4"/><text x="82.1618%" y="239.50"></text></g><g><title>xa_load (4 samples, 0.13%)</title><rect x="81.9118%" y="213" width="0.1287%" height="15" fill="rgb(221,70,22)" fg:x="2545" fg:w="4"/><text x="82.1618%" y="223.50"></text></g><g><title>xas_load (3 samples, 0.10%)</title><rect x="81.9440%" y="197" width="0.0966%" height="15" fill="rgb(248,145,5)" fg:x="2546" fg:w="3"/><text x="82.1940%" y="207.50"></text></g><g><title>__blk_flush_plug (1 samples, 0.03%)</title><rect x="82.0406%" y="229" width="0.0322%" height="15" fill="rgb(226,116,26)" fg:x="2549" fg:w="1"/><text x="82.2906%" y="239.50"></text></g><g><title>__io_commit_cqring_flush (1 samples, 0.03%)</title><rect x="82.0727%" y="229" width="0.0322%" height="15" fill="rgb(244,5,17)" fg:x="2550" fg:w="1"/><text x="82.3227%" y="239.50"></text></g><g><title>io_poll_cancel (1 samples, 0.03%)</title><rect x="82.3302%" y="165" width="0.0322%" height="15" fill="rgb(252,159,33)" fg:x="2558" fg:w="1"/><text x="82.5802%" y="175.50"></text></g><g><title>__io_poll_cancel.isra.0 (1 samples, 0.03%)</title><rect x="82.3302%" y="149" width="0.0322%" height="15" fill="rgb(206,71,0)" fg:x="2558" fg:w="1"/><text x="82.5802%" y="159.50"></text></g><g><title>io_poll_find.isra.0 (1 samples, 0.03%)</title><rect x="82.3302%" y="133" width="0.0322%" height="15" fill="rgb(233,118,54)" fg:x="2558" fg:w="1"/><text x="82.5802%" y="143.50"></text></g><g><title>io_async_cancel (3 samples, 0.10%)</title><rect x="82.2980%" y="213" width="0.0966%" height="15" fill="rgb(234,83,48)" fg:x="2557" fg:w="3"/><text x="82.5480%" y="223.50"></text></g><g><title>__io_async_cancel (3 samples, 0.10%)</title><rect x="82.2980%" y="197" width="0.0966%" height="15" fill="rgb(228,3,54)" fg:x="2557" fg:w="3"/><text x="82.5480%" y="207.50"></text></g><g><title>io_try_cancel (3 samples, 0.10%)</title><rect x="82.2980%" y="181" width="0.0966%" height="15" fill="rgb(226,155,13)" fg:x="2557" fg:w="3"/><text x="82.5480%" y="191.50"></text></g><g><title>io_timeout_cancel (1 samples, 0.03%)</title><rect x="82.3624%" y="165" width="0.0322%" height="15" fill="rgb(241,28,37)" fg:x="2559" fg:w="1"/><text x="82.6124%" y="175.50"></text></g><g><title>io_req_task_queue_fail (1 samples, 0.03%)</title><rect x="82.3624%" y="149" width="0.0322%" height="15" fill="rgb(233,93,10)" fg:x="2559" fg:w="1"/><text x="82.6124%" y="159.50"></text></g><g><title>io_issue_sqe (10 samples, 0.32%)</title><rect x="82.1049%" y="229" width="0.3219%" height="15" fill="rgb(225,113,19)" fg:x="2551" fg:w="10"/><text x="82.3549%" y="239.50"></text></g><g><title>io_timeout (1 samples, 0.03%)</title><rect x="82.3946%" y="213" width="0.0322%" height="15" fill="rgb(241,2,18)" fg:x="2560" fg:w="1"/><text x="82.6446%" y="223.50"></text></g><g><title>io_submit_sqes (14 samples, 0.45%)</title><rect x="82.0406%" y="245" width="0.4506%" height="15" fill="rgb(228,207,21)" fg:x="2549" fg:w="14"/><text x="82.2906%" y="255.50"></text></g><g><title>io_timeout_prep (2 samples, 0.06%)</title><rect x="82.4268%" y="229" width="0.0644%" height="15" fill="rgb(213,211,35)" fg:x="2561" fg:w="2"/><text x="82.6768%" y="239.50"></text></g><g><title>__io_timeout_prep (2 samples, 0.06%)</title><rect x="82.4268%" y="213" width="0.0644%" height="15" fill="rgb(209,83,10)" fg:x="2561" fg:w="2"/><text x="82.6768%" y="223.50"></text></g><g><title>io_alloc_async_data (2 samples, 0.06%)</title><rect x="82.4268%" y="197" width="0.0644%" height="15" fill="rgb(209,164,1)" fg:x="2561" fg:w="2"/><text x="82.6768%" y="207.50"></text></g><g><title>__kmalloc_noprof (2 samples, 0.06%)</title><rect x="82.4268%" y="181" width="0.0644%" height="15" fill="rgb(213,184,43)" fg:x="2561" fg:w="2"/><text x="82.6768%" y="191.50"></text></g><g><title>__cond_resched (1 samples, 0.03%)</title><rect x="82.4590%" y="165" width="0.0322%" height="15" fill="rgb(231,61,34)" fg:x="2562" fg:w="1"/><text x="82.7090%" y="175.50"></text></g><g><title>rcu_all_qs (1 samples, 0.03%)</title><rect x="82.4590%" y="149" width="0.0322%" height="15" fill="rgb(235,75,3)" fg:x="2562" fg:w="1"/><text x="82.7090%" y="159.50"></text></g><g><title>io_timeout_prep (2 samples, 0.06%)</title><rect x="82.4911%" y="245" width="0.0644%" height="15" fill="rgb(220,106,47)" fg:x="2563" fg:w="2"/><text x="82.7411%" y="255.50"></text></g><g><title>__arm64_sys_io_uring_enter (22 samples, 0.71%)</title><rect x="81.9118%" y="261" width="0.7081%" height="15" fill="rgb(210,196,33)" fg:x="2545" fg:w="22"/><text x="82.1618%" y="271.50"></text></g><g><title>mutex_lock (2 samples, 0.06%)</title><rect x="82.5555%" y="245" width="0.0644%" height="15" fill="rgb(229,154,42)" fg:x="2565" fg:w="2"/><text x="82.8055%" y="255.50"></text></g><g><title>__cond_resched (2 samples, 0.06%)</title><rect x="82.5555%" y="229" width="0.0644%" height="15" fill="rgb(228,114,26)" fg:x="2565" fg:w="2"/><text x="82.8055%" y="239.50"></text></g><g><title>rcu_all_qs (1 samples, 0.03%)</title><rect x="82.5877%" y="213" width="0.0322%" height="15" fill="rgb(208,144,1)" fg:x="2566" fg:w="1"/><text x="82.8377%" y="223.50"></text></g><g><title>do_el0_svc (26 samples, 0.84%)</title><rect x="81.8153%" y="293" width="0.8368%" height="15" fill="rgb(239,112,37)" fg:x="2542" fg:w="26"/><text x="82.0653%" y="303.50"></text></g><g><title>invoke_syscall.constprop.0 (26 samples, 0.84%)</title><rect x="81.8153%" y="277" width="0.8368%" height="15" fill="rgb(210,96,50)" fg:x="2542" fg:w="26"/><text x="82.0653%" y="287.50"></text></g><g><title>mutex_unlock (1 samples, 0.03%)</title><rect x="82.6199%" y="261" width="0.0322%" height="15" fill="rgb(222,178,2)" fg:x="2567" fg:w="1"/><text x="82.8699%" y="271.50"></text></g><g><title>__cond_resched (2 samples, 0.06%)</title><rect x="82.6521%" y="229" width="0.0644%" height="15" fill="rgb(226,74,18)" fg:x="2568" fg:w="2"/><text x="82.9021%" y="239.50"></text></g><g><title>rcu_all_qs (2 samples, 0.06%)</title><rect x="82.6521%" y="213" width="0.0644%" height="15" fill="rgb(225,67,54)" fg:x="2568" fg:w="2"/><text x="82.9021%" y="223.50"></text></g><g><title>__io_submit_flush_completions (1 samples, 0.03%)</title><rect x="82.7164%" y="165" width="0.0322%" height="15" fill="rgb(251,92,32)" fg:x="2570" fg:w="1"/><text x="82.9664%" y="175.50"></text></g><g><title>io_queue_next (1 samples, 0.03%)</title><rect x="82.7164%" y="149" width="0.0322%" height="15" fill="rgb(228,149,22)" fg:x="2570" fg:w="1"/><text x="82.9664%" y="159.50"></text></g><g><title>io_disarm_next (1 samples, 0.03%)</title><rect x="82.7164%" y="133" width="0.0322%" height="15" fill="rgb(243,54,13)" fg:x="2570" fg:w="1"/><text x="82.9664%" y="143.50"></text></g><g><title>__io_req_task_work_add (1 samples, 0.03%)</title><rect x="82.7164%" y="117" width="0.0322%" height="15" fill="rgb(243,180,28)" fg:x="2570" fg:w="1"/><text x="82.9664%" y="127.50"></text></g><g><title>io_req_normal_work_add (1 samples, 0.03%)</title><rect x="82.7164%" y="101" width="0.0322%" height="15" fill="rgb(208,167,24)" fg:x="2570" fg:w="1"/><text x="82.9664%" y="111.50"></text></g><g><title>task_work_add (1 samples, 0.03%)</title><rect x="82.7164%" y="85" width="0.0322%" height="15" fill="rgb(245,73,45)" fg:x="2570" fg:w="1"/><text x="82.9664%" y="95.50"></text></g><g><title>tctx_task_work (2 samples, 0.06%)</title><rect x="82.7164%" y="229" width="0.0644%" height="15" fill="rgb(237,203,48)" fg:x="2570" fg:w="2"/><text x="82.9664%" y="239.50"></text></g><g><title>tctx_task_work_run (2 samples, 0.06%)</title><rect x="82.7164%" y="213" width="0.0644%" height="15" fill="rgb(211,197,16)" fg:x="2570" fg:w="2"/><text x="82.9664%" y="223.50"></text></g><g><title>io_handle_tw_list (2 samples, 0.06%)</title><rect x="82.7164%" y="197" width="0.0644%" height="15" fill="rgb(243,99,51)" fg:x="2570" fg:w="2"/><text x="82.9664%" y="207.50"></text></g><g><title>ctx_flush_and_put.isra.0 (2 samples, 0.06%)</title><rect x="82.7164%" y="181" width="0.0644%" height="15" fill="rgb(215,123,29)" fg:x="2570" fg:w="2"/><text x="82.9664%" y="191.50"></text></g><g><title>percpu_ref_put_many (1 samples, 0.03%)</title><rect x="82.7486%" y="165" width="0.0322%" height="15" fill="rgb(239,186,37)" fg:x="2571" fg:w="1"/><text x="82.9986%" y="175.50"></text></g><g><title>do_notify_resume (6 samples, 0.19%)</title><rect x="82.6521%" y="293" width="0.1931%" height="15" fill="rgb(252,136,39)" fg:x="2568" fg:w="6"/><text x="82.9021%" y="303.50"></text></g><g><title>do_signal (6 samples, 0.19%)</title><rect x="82.6521%" y="277" width="0.1931%" height="15" fill="rgb(223,213,32)" fg:x="2568" fg:w="6"/><text x="82.9021%" y="287.50"></text></g><g><title>get_signal (6 samples, 0.19%)</title><rect x="82.6521%" y="261" width="0.1931%" height="15" fill="rgb(233,115,5)" fg:x="2568" fg:w="6"/><text x="82.9021%" y="271.50"></text></g><g><title>task_work_run (6 samples, 0.19%)</title><rect x="82.6521%" y="245" width="0.1931%" height="15" fill="rgb(207,226,44)" fg:x="2568" fg:w="6"/><text x="82.9021%" y="255.50"></text></g><g><title>tctx_task_work_run (2 samples, 0.06%)</title><rect x="82.7808%" y="229" width="0.0644%" height="15" fill="rgb(208,126,0)" fg:x="2572" fg:w="2"/><text x="83.0308%" y="239.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (49 samples, 1.58%)</title><rect x="81.3003%" y="501" width="1.5771%" height="15" fill="rgb(244,66,21)" fg:x="2526" fg:w="49"/><text x="81.5503%" y="511.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_sqe_queue (48 samples, 1.54%)</title><rect x="81.3325%" y="485" width="1.5449%" height="15" fill="rgb(222,97,12)" fg:x="2527" fg:w="48"/><text x="81.5825%" y="495.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_sqes (43 samples, 1.38%)</title><rect x="81.4934%" y="469" width="1.3840%" height="15" fill="rgb(219,213,19)" fg:x="2532" fg:w="43"/><text x="81.7434%" y="479.50"></text></g><g><title>glommio::iou::IoUring::submit_sqes (43 samples, 1.38%)</title><rect x="81.4934%" y="453" width="1.3840%" height="15" fill="rgb(252,169,30)" fg:x="2532" fg:w="43"/><text x="81.7434%" y="463.50"></text></g><g><title>glommio::iou::submission_queue::SubmissionQueue::submit (43 samples, 1.38%)</title><rect x="81.4934%" y="437" width="1.3840%" height="15" fill="rgb(206,32,51)" fg:x="2532" fg:w="43"/><text x="81.7434%" y="447.50"></text></g><g><title>io_uring_submit (43 samples, 1.38%)</title><rect x="81.4934%" y="421" width="1.3840%" height="15" fill="rgb(250,172,42)" fg:x="2532" fg:w="43"/><text x="81.7434%" y="431.50"></text></g><g><title>__io_uring_submit_and_wait (43 samples, 1.38%)</title><rect x="81.4934%" y="405" width="1.3840%" height="15" fill="rgb(209,34,43)" fg:x="2532" fg:w="43"/><text x="81.7434%" y="415.50"></text></g><g><title>__io_uring_submit (43 samples, 1.38%)</title><rect x="81.4934%" y="389" width="1.3840%" height="15" fill="rgb(223,11,35)" fg:x="2532" fg:w="43"/><text x="81.7434%" y="399.50"></text></g><g><title>__sys_io_uring_enter2 (43 samples, 1.38%)</title><rect x="81.4934%" y="373" width="1.3840%" height="15" fill="rgb(251,219,26)" fg:x="2532" fg:w="43"/><text x="81.7434%" y="383.50"></text></g><g><title>syscall (42 samples, 1.35%)</title><rect x="81.5256%" y="357" width="1.3518%" height="15" fill="rgb(231,119,3)" fg:x="2533" fg:w="42"/><text x="81.7756%" y="367.50"></text></g><g><title>el0t_64_sync (41 samples, 1.32%)</title><rect x="81.5578%" y="341" width="1.3196%" height="15" fill="rgb(216,97,11)" fg:x="2534" fg:w="41"/><text x="81.8078%" y="351.50"></text></g><g><title>el0t_64_sync_handler (41 samples, 1.32%)</title><rect x="81.5578%" y="325" width="1.3196%" height="15" fill="rgb(223,59,9)" fg:x="2534" fg:w="41"/><text x="81.8078%" y="335.50"></text></g><g><title>el0_svc (41 samples, 1.32%)</title><rect x="81.5578%" y="309" width="1.3196%" height="15" fill="rgb(233,93,31)" fg:x="2534" fg:w="41"/><text x="81.8078%" y="319.50"></text></g><g><title>invoke_syscall.constprop.0 (1 samples, 0.03%)</title><rect x="82.8452%" y="293" width="0.0322%" height="15" fill="rgb(239,81,33)" fg:x="2574" fg:w="1"/><text x="83.0952%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="82.8774%" y="437" width="0.0322%" height="15" fill="rgb(213,120,34)" fg:x="2575" fg:w="1"/><text x="83.1274%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="82.8774%" y="421" width="0.0322%" height="15" fill="rgb(243,49,53)" fg:x="2575" fg:w="1"/><text x="83.1274%" y="431.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="82.9096%" y="437" width="0.0322%" height="15" fill="rgb(247,216,33)" fg:x="2576" fg:w="1"/><text x="83.1596%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="82.9096%" y="421" width="0.0322%" height="15" fill="rgb(226,26,14)" fg:x="2576" fg:w="1"/><text x="83.1596%" y="431.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="82.9096%" y="405" width="0.0322%" height="15" fill="rgb(215,49,53)" fg:x="2576" fg:w="1"/><text x="83.1596%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="82.9096%" y="389" width="0.0322%" height="15" fill="rgb(245,162,40)" fg:x="2576" fg:w="1"/><text x="83.1596%" y="399.50"></text></g><g><title>glommio::iou::submission_queue::SubmissionQueue::prepare_sqes (1 samples, 0.03%)</title><rect x="82.9417%" y="437" width="0.0322%" height="15" fill="rgb(229,68,17)" fg:x="2577" fg:w="1"/><text x="83.1917%" y="447.50"></text></g><g><title>glommio::iou::submission_queue::SubmissionQueue::space_left (1 samples, 0.03%)</title><rect x="82.9417%" y="421" width="0.0322%" height="15" fill="rgb(213,182,10)" fg:x="2577" fg:w="1"/><text x="83.1917%" y="431.50"></text></g><g><title>rust_io_uring_sq_space_left (1 samples, 0.03%)</title><rect x="82.9417%" y="405" width="0.0322%" height="15" fill="rgb(245,125,30)" fg:x="2577" fg:w="1"/><text x="83.1917%" y="415.50"></text></g><g><title>io_uring_sq_space_left (1 samples, 0.03%)</title><rect x="82.9417%" y="389" width="0.0322%" height="15" fill="rgb(232,202,2)" fg:x="2577" fg:w="1"/><text x="83.1917%" y="399.50"></text></g><g><title>glommio::sys::uring::extract_one_chain (1 samples, 0.03%)</title><rect x="82.9739%" y="437" width="0.0322%" height="15" fill="rgb(237,140,51)" fg:x="2578" fg:w="1"/><text x="83.2239%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="82.9739%" y="421" width="0.0322%" height="15" fill="rgb(236,157,25)" fg:x="2578" fg:w="1"/><text x="83.2239%" y="431.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="82.9739%" y="405" width="0.0322%" height="15" fill="rgb(219,209,0)" fg:x="2578" fg:w="1"/><text x="83.2239%" y="415.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="82.9739%" y="389" width="0.0322%" height="15" fill="rgb(240,116,54)" fg:x="2578" fg:w="1"/><text x="83.2239%" y="399.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.03%)</title><rect x="82.9739%" y="373" width="0.0322%" height="15" fill="rgb(216,10,36)" fg:x="2578" fg:w="1"/><text x="83.2239%" y="383.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1 samples, 0.03%)</title><rect x="82.9739%" y="357" width="0.0322%" height="15" fill="rgb(222,72,44)" fg:x="2578" fg:w="1"/><text x="83.2239%" y="367.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (5 samples, 0.16%)</title><rect x="82.8774%" y="485" width="0.1609%" height="15" fill="rgb(232,159,9)" fg:x="2575" fg:w="5"/><text x="83.1274%" y="495.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_sqe_queue (5 samples, 0.16%)</title><rect x="82.8774%" y="469" width="0.1609%" height="15" fill="rgb(210,39,32)" fg:x="2575" fg:w="5"/><text x="83.1274%" y="479.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (5 samples, 0.16%)</title><rect x="82.8774%" y="453" width="0.1609%" height="15" fill="rgb(216,194,45)" fg:x="2575" fg:w="5"/><text x="83.1274%" y="463.50"></text></g><g><title>glommio::sys::uring::peek_one_chain (1 samples, 0.03%)</title><rect x="83.0061%" y="437" width="0.0322%" height="15" fill="rgb(218,18,35)" fg:x="2579" fg:w="1"/><text x="83.2561%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter (1 samples, 0.03%)</title><rect x="83.0061%" y="421" width="0.0322%" height="15" fill="rgb(207,83,51)" fg:x="2579" fg:w="1"/><text x="83.2561%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_slices (1 samples, 0.03%)</title><rect x="83.0061%" y="405" width="0.0322%" height="15" fill="rgb(225,63,43)" fg:x="2579" fg:w="1"/><text x="83.2561%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_range (1 samples, 0.03%)</title><rect x="83.0061%" y="389" width="0.0322%" height="15" fill="rgb(207,57,36)" fg:x="2579" fg:w="1"/><text x="83.2561%" y="399.50"></text></g><g><title>glommio::parking::Parker::poll_io (68 samples, 2.19%)</title><rect x="80.8819%" y="565" width="2.1886%" height="15" fill="rgb(216,99,33)" fg:x="2513" fg:w="68"/><text x="81.1319%" y="575.50">g..</text></g><g><title>glommio::parking::Inner::park (68 samples, 2.19%)</title><rect x="80.8819%" y="549" width="2.1886%" height="15" fill="rgb(225,42,16)" fg:x="2513" fg:w="68"/><text x="81.1319%" y="559.50">g..</text></g><g><title>glommio::reactor::Reactor::react (68 samples, 2.19%)</title><rect x="80.8819%" y="533" width="2.1886%" height="15" fill="rgb(220,201,45)" fg:x="2513" fg:w="68"/><text x="81.1319%" y="543.50">g..</text></g><g><title>glommio::sys::uring::Reactor::wait (67 samples, 2.16%)</title><rect x="80.9141%" y="517" width="2.1564%" height="15" fill="rgb(225,33,4)" fg:x="2514" fg:w="67"/><text x="81.1641%" y="527.50">g..</text></g><g><title>glommio::sys::uring::UringCommon::flush_cancellations (6 samples, 0.19%)</title><rect x="82.8774%" y="501" width="0.1931%" height="15" fill="rgb(224,33,50)" fg:x="2575" fg:w="6"/><text x="83.1274%" y="511.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (1 samples, 0.03%)</title><rect x="83.0383%" y="485" width="0.0322%" height="15" fill="rgb(246,198,51)" fg:x="2580" fg:w="1"/><text x="83.2883%" y="495.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (1 samples, 0.03%)</title><rect x="83.0383%" y="469" width="0.0322%" height="15" fill="rgb(205,22,4)" fg:x="2580" fg:w="1"/><text x="83.2883%" y="479.50"></text></g><g><title>glommio::iou::IoUring::peek_for_cqe (1 samples, 0.03%)</title><rect x="83.0383%" y="453" width="0.0322%" height="15" fill="rgb(206,3,8)" fg:x="2580" fg:w="1"/><text x="83.2883%" y="463.50"></text></g><g><title>glommio::iou::completion_queue::CompletionQueue::peek_for_cqe (1 samples, 0.03%)</title><rect x="83.0383%" y="437" width="0.0322%" height="15" fill="rgb(251,23,15)" fg:x="2580" fg:w="1"/><text x="83.2883%" y="447.50"></text></g><g><title>__io_uring_get_cqe (1 samples, 0.03%)</title><rect x="83.0383%" y="421" width="0.0322%" height="15" fill="rgb(252,88,28)" fg:x="2580" fg:w="1"/><text x="83.2883%" y="431.50"></text></g><g><title>_io_uring_get_cqe (1 samples, 0.03%)</title><rect x="83.0383%" y="405" width="0.0322%" height="15" fill="rgb(212,127,14)" fg:x="2580" fg:w="1"/><text x="83.2883%" y="415.50"></text></g><g><title>cq_ring_needs_flush (1 samples, 0.03%)</title><rect x="83.0383%" y="389" width="0.0322%" height="15" fill="rgb(247,145,37)" fg:x="2580" fg:w="1"/><text x="83.2883%" y="399.50"></text></g><g><title>glommio::sys::uring::Reactor::flush_syscall_thread (2 samples, 0.06%)</title><rect x="83.0705%" y="533" width="0.0644%" height="15" fill="rgb(209,117,53)" fg:x="2581" fg:w="2"/><text x="83.3205%" y="543.50"></text></g><g><title>glommio::sys::blocking::BlockingThreadPool::flush (2 samples, 0.06%)</title><rect x="83.0705%" y="517" width="0.0644%" height="15" fill="rgb(212,90,42)" fg:x="2581" fg:w="2"/><text x="83.3205%" y="527.50"></text></g><g><title>&lt;flume::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="83.1027%" y="501" width="0.0322%" height="15" fill="rgb(218,164,37)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="511.50"></text></g><g><title>flume::Receiver&lt;T&gt;::try_recv (1 samples, 0.03%)</title><rect x="83.1027%" y="485" width="0.0322%" height="15" fill="rgb(246,65,34)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="495.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (1 samples, 0.03%)</title><rect x="83.1027%" y="469" width="0.0322%" height="15" fill="rgb(231,100,33)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="479.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (1 samples, 0.03%)</title><rect x="83.1027%" y="453" width="0.0322%" height="15" fill="rgb(228,126,14)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="463.50"></text></g><g><title>core::mem::drop (1 samples, 0.03%)</title><rect x="83.1027%" y="437" width="0.0322%" height="15" fill="rgb(215,173,21)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;glommio::sys::blocking::BlockingThreadResp&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="83.1027%" y="421" width="0.0322%" height="15" fill="rgb(210,6,40)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="83.1027%" y="405" width="0.0322%" height="15" fill="rgb(212,48,18)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.03%)</title><rect x="83.1027%" y="389" width="0.0322%" height="15" fill="rgb(230,214,11)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.03%)</title><rect x="83.1027%" y="373" width="0.0322%" height="15" fill="rgb(254,105,39)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.03%)</title><rect x="83.1027%" y="357" width="0.0322%" height="15" fill="rgb(245,158,5)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="367.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.03%)</title><rect x="83.1027%" y="341" width="0.0322%" height="15" fill="rgb(249,208,11)" fg:x="2582" fg:w="1"/><text x="83.3527%" y="351.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (1 samples, 0.03%)</title><rect x="83.1349%" y="517" width="0.0322%" height="15" fill="rgb(210,39,28)" fg:x="2583" fg:w="1"/><text x="83.3849%" y="527.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_sqe_queue (1 samples, 0.03%)</title><rect x="83.1349%" y="501" width="0.0322%" height="15" fill="rgb(211,56,53)" fg:x="2583" fg:w="1"/><text x="83.3849%" y="511.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (1 samples, 0.03%)</title><rect x="83.1349%" y="485" width="0.0322%" height="15" fill="rgb(226,201,30)" fg:x="2583" fg:w="1"/><text x="83.3849%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="83.1349%" y="469" width="0.0322%" height="15" fill="rgb(239,101,34)" fg:x="2583" fg:w="1"/><text x="83.3849%" y="479.50"></text></g><g><title>clock_gettime@plt (1 samples, 0.03%)</title><rect x="83.1349%" y="453" width="0.0322%" height="15" fill="rgb(226,209,5)" fg:x="2583" fg:w="1"/><text x="83.3849%" y="463.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (1 samples, 0.03%)</title><rect x="83.1670%" y="517" width="0.0322%" height="15" fill="rgb(250,105,47)" fg:x="2584" fg:w="1"/><text x="83.4170%" y="527.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (1 samples, 0.03%)</title><rect x="83.1670%" y="501" width="0.0322%" height="15" fill="rgb(230,72,3)" fg:x="2584" fg:w="1"/><text x="83.4170%" y="511.50"></text></g><g><title>glommio::sys::uring::extract_one_chain (1 samples, 0.03%)</title><rect x="83.2314%" y="469" width="0.0322%" height="15" fill="rgb(232,218,39)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="83.2314%" y="453" width="0.0322%" height="15" fill="rgb(248,166,6)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="463.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="83.2314%" y="437" width="0.0322%" height="15" fill="rgb(247,89,20)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="447.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="83.2314%" y="421" width="0.0322%" height="15" fill="rgb(248,130,54)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="83.2314%" y="405" width="0.0322%" height="15" fill="rgb(234,196,4)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.03%)</title><rect x="83.2314%" y="389" width="0.0322%" height="15" fill="rgb(250,143,31)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.03%)</title><rect x="83.2314%" y="373" width="0.0322%" height="15" fill="rgb(211,110,34)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="383.50"></text></g><g><title>&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="83.2314%" y="357" width="0.0322%" height="15" fill="rgb(215,124,48)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (1 samples, 0.03%)</title><rect x="83.2314%" y="341" width="0.0322%" height="15" fill="rgb(216,46,13)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="351.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="83.2314%" y="325" width="0.0322%" height="15" fill="rgb(205,184,25)" fg:x="2586" fg:w="1"/><text x="83.4814%" y="335.50"></text></g><g><title>glommio::iou::sqe::SQE::set_flags (1 samples, 0.03%)</title><rect x="83.2636%" y="453" width="0.0322%" height="15" fill="rgb(228,1,10)" fg:x="2587" fg:w="1"/><text x="83.5136%" y="463.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (3 samples, 0.10%)</title><rect x="83.2314%" y="485" width="0.0966%" height="15" fill="rgb(213,116,27)" fg:x="2586" fg:w="3"/><text x="83.4814%" y="495.50"></text></g><g><title>glommio::sys::uring::fill_sqe (2 samples, 0.06%)</title><rect x="83.2636%" y="469" width="0.0644%" height="15" fill="rgb(241,95,50)" fg:x="2587" fg:w="2"/><text x="83.5136%" y="479.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::free_list::FreeList&lt;core::pin::Pin&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;glommio::sys::source::InnerSource&gt;&gt;&gt;&gt;&gt;::peek_source_mut (1 samples, 0.03%)</title><rect x="83.2958%" y="453" width="0.0322%" height="15" fill="rgb(238,48,32)" fg:x="2588" fg:w="1"/><text x="83.5458%" y="463.50"></text></g><g><title>glommio::sys::uring::fill_sqe::_{{closure}} (1 samples, 0.03%)</title><rect x="83.2958%" y="437" width="0.0322%" height="15" fill="rgb(235,113,49)" fg:x="2588" fg:w="1"/><text x="83.5458%" y="447.50"></text></g><g><title>glommio::iou::sqe::SQE::prep_read (1 samples, 0.03%)</title><rect x="83.2958%" y="421" width="0.0322%" height="15" fill="rgb(205,127,43)" fg:x="2588" fg:w="1"/><text x="83.5458%" y="431.50"></text></g><g><title>&lt;&amp;mut [u8] as glommio::iou::registrar::registered::UringReadBuf&gt;::prep_read (1 samples, 0.03%)</title><rect x="83.2958%" y="405" width="0.0322%" height="15" fill="rgb(250,162,2)" fg:x="2588" fg:w="1"/><text x="83.5458%" y="415.50"></text></g><g><title>rust_io_uring_prep_read (1 samples, 0.03%)</title><rect x="83.2958%" y="389" width="0.0322%" height="15" fill="rgb(220,13,41)" fg:x="2588" fg:w="1"/><text x="83.5458%" y="399.50"></text></g><g><title>io_uring_prep_read (1 samples, 0.03%)</title><rect x="83.2958%" y="373" width="0.0322%" height="15" fill="rgb(249,221,25)" fg:x="2588" fg:w="1"/><text x="83.5458%" y="383.50"></text></g><g><title>io_uring_prep_rw (1 samples, 0.03%)</title><rect x="83.2958%" y="357" width="0.0322%" height="15" fill="rgb(215,208,19)" fg:x="2588" fg:w="1"/><text x="83.5458%" y="367.50"></text></g><g><title>__io_uring_add_tctx_node_from_submit (2 samples, 0.06%)</title><rect x="83.4245%" y="261" width="0.0644%" height="15" fill="rgb(236,175,2)" fg:x="2592" fg:w="2"/><text x="83.6745%" y="271.50"></text></g><g><title>__io_uring_add_tctx_node (2 samples, 0.06%)</title><rect x="83.4245%" y="245" width="0.0644%" height="15" fill="rgb(241,52,2)" fg:x="2592" fg:w="2"/><text x="83.6745%" y="255.50"></text></g><g><title>xa_load (2 samples, 0.06%)</title><rect x="83.4245%" y="229" width="0.0644%" height="15" fill="rgb(248,140,14)" fg:x="2592" fg:w="2"/><text x="83.6745%" y="239.50"></text></g><g><title>xas_load (2 samples, 0.06%)</title><rect x="83.4245%" y="213" width="0.0644%" height="15" fill="rgb(253,22,42)" fg:x="2592" fg:w="2"/><text x="83.6745%" y="223.50"></text></g><g><title>fget (2 samples, 0.06%)</title><rect x="83.4889%" y="261" width="0.0644%" height="15" fill="rgb(234,61,47)" fg:x="2594" fg:w="2"/><text x="83.7389%" y="271.50"></text></g><g><title>io_file_get_normal (3 samples, 0.10%)</title><rect x="83.5533%" y="229" width="0.0966%" height="15" fill="rgb(208,226,15)" fg:x="2596" fg:w="3"/><text x="83.8033%" y="239.50"></text></g><g><title>fget (3 samples, 0.10%)</title><rect x="83.5533%" y="213" width="0.0966%" height="15" fill="rgb(217,221,4)" fg:x="2596" fg:w="3"/><text x="83.8033%" y="223.50"></text></g><g><title>iov_iter_zero (3 samples, 0.10%)</title><rect x="83.7142%" y="197" width="0.0966%" height="15" fill="rgb(212,174,34)" fg:x="2601" fg:w="3"/><text x="83.9642%" y="207.50"></text></g><g><title>__arch_clear_user (494 samples, 15.90%)</title><rect x="83.8429%" y="181" width="15.8996%" height="15" fill="rgb(253,83,4)" fg:x="2605" fg:w="494"/><text x="84.0929%" y="191.50">__arch_clear_user</text></g><g><title>read_iter_zero (497 samples, 16.00%)</title><rect x="83.8107%" y="197" width="15.9961%" height="15" fill="rgb(250,195,49)" fg:x="2604" fg:w="497"/><text x="84.0607%" y="207.50">read_iter_zero</text></g><g><title>iov_iter_zero (2 samples, 0.06%)</title><rect x="99.7425%" y="181" width="0.0644%" height="15" fill="rgb(241,192,25)" fg:x="3099" fg:w="2"/><text x="99.9925%" y="191.50"></text></g><g><title>__io_read (503 samples, 16.19%)</title><rect x="83.6498%" y="213" width="16.1893%" height="15" fill="rgb(208,124,10)" fg:x="2599" fg:w="503"/><text x="83.8998%" y="223.50">__io_read</text></g><g><title>rw_verify_area (1 samples, 0.03%)</title><rect x="99.8069%" y="197" width="0.0322%" height="15" fill="rgb(222,33,0)" fg:x="3101" fg:w="1"/><text x="100.0569%" y="207.50"></text></g><g><title>security_file_permission (1 samples, 0.03%)</title><rect x="99.8069%" y="181" width="0.0322%" height="15" fill="rgb(234,209,28)" fg:x="3101" fg:w="1"/><text x="100.0569%" y="191.50"></text></g><g><title>avc_policy_seqno (1 samples, 0.03%)</title><rect x="99.8069%" y="165" width="0.0322%" height="15" fill="rgb(224,11,23)" fg:x="3101" fg:w="1"/><text x="100.0569%" y="175.50"></text></g><g><title>io_issue_sqe (507 samples, 16.32%)</title><rect x="83.5533%" y="245" width="16.3180%" height="15" fill="rgb(232,99,1)" fg:x="2596" fg:w="507"/><text x="83.8033%" y="255.50">io_issue_sqe</text></g><g><title>io_read (504 samples, 16.22%)</title><rect x="83.6498%" y="229" width="16.2214%" height="15" fill="rgb(237,95,45)" fg:x="2599" fg:w="504"/><text x="83.8998%" y="239.50">io_read</text></g><g><title>kiocb_done (1 samples, 0.03%)</title><rect x="99.8391%" y="213" width="0.0322%" height="15" fill="rgb(208,109,11)" fg:x="3102" fg:w="1"/><text x="100.0891%" y="223.50"></text></g><g><title>io_req_io_end (1 samples, 0.03%)</title><rect x="99.8391%" y="197" width="0.0322%" height="15" fill="rgb(216,190,48)" fg:x="3102" fg:w="1"/><text x="100.0891%" y="207.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="99.8391%" y="181" width="0.0322%" height="15" fill="rgb(251,171,36)" fg:x="3102" fg:w="1"/><text x="100.0891%" y="191.50"></text></g><g><title>__io_import_iovec (1 samples, 0.03%)</title><rect x="99.8713%" y="229" width="0.0322%" height="15" fill="rgb(230,62,22)" fg:x="3103" fg:w="1"/><text x="100.1213%" y="239.50"></text></g><g><title>io_prep_read (2 samples, 0.06%)</title><rect x="99.8713%" y="245" width="0.0644%" height="15" fill="rgb(225,114,35)" fg:x="3103" fg:w="2"/><text x="100.1213%" y="255.50"></text></g><g><title>io_prep_rw (1 samples, 0.03%)</title><rect x="99.9034%" y="229" width="0.0322%" height="15" fill="rgb(215,118,42)" fg:x="3104" fg:w="1"/><text x="100.1534%" y="239.50"></text></g><g><title>io_alloc_async_data (1 samples, 0.03%)</title><rect x="99.9034%" y="213" width="0.0322%" height="15" fill="rgb(243,119,21)" fg:x="3104" fg:w="1"/><text x="100.1534%" y="223.50"></text></g><g><title>__update_cpu_freelist_fast (1 samples, 0.03%)</title><rect x="99.9034%" y="197" width="0.0322%" height="15" fill="rgb(252,177,53)" fg:x="3104" fg:w="1"/><text x="100.1534%" y="207.50"></text></g><g><title>start_thread (603 samples, 19.41%)</title><rect x="80.5600%" y="853" width="19.4078%" height="15" fill="rgb(237,209,29)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="863.50">start_thread</text></g><g><title>start_thread (603 samples, 19.41%)</title><rect x="80.5600%" y="837" width="19.4078%" height="15" fill="rgb(212,65,23)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="847.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (603 samples, 19.41%)</title><rect x="80.5600%" y="821" width="19.4078%" height="15" fill="rgb(230,222,46)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="831.50">std::sys::pal::unix::thread::T..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (603 samples, 19.41%)</title><rect x="80.5600%" y="805" width="19.4078%" height="15" fill="rgb(215,135,32)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="815.50">&lt;alloc::boxed::Box&lt;F,A&gt; as cor..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (603 samples, 19.41%)</title><rect x="80.5600%" y="789" width="19.4078%" height="15" fill="rgb(246,101,22)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="799.50">&lt;alloc::boxed::Box&lt;F,A&gt; as cor..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (603 samples, 19.41%)</title><rect x="80.5600%" y="773" width="19.4078%" height="15" fill="rgb(206,107,13)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="783.50">core::ops::function::FnOnce::c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (603 samples, 19.41%)</title><rect x="80.5600%" y="757" width="19.4078%" height="15" fill="rgb(250,100,44)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="767.50">std::thread::Builder::spawn_un..</text></g><g><title>std::panic::catch_unwind (603 samples, 19.41%)</title><rect x="80.5600%" y="741" width="19.4078%" height="15" fill="rgb(231,147,38)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (603 samples, 19.41%)</title><rect x="80.5600%" y="725" width="19.4078%" height="15" fill="rgb(229,8,40)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (603 samples, 19.41%)</title><rect x="80.5600%" y="709" width="19.4078%" height="15" fill="rgb(221,135,30)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="719.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (603 samples, 19.41%)</title><rect x="80.5600%" y="693" width="19.4078%" height="15" fill="rgb(249,193,18)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="703.50">&lt;core::panic::unwind_safe::Ass..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (603 samples, 19.41%)</title><rect x="80.5600%" y="677" width="19.4078%" height="15" fill="rgb(209,133,39)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="687.50">std::thread::Builder::spawn_un..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (603 samples, 19.41%)</title><rect x="80.5600%" y="661" width="19.4078%" height="15" fill="rgb(232,100,14)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="671.50">std::sys::backtrace::__rust_be..</text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::_{{closure}} (603 samples, 19.41%)</title><rect x="80.5600%" y="645" width="19.4078%" height="15" fill="rgb(224,185,1)" fg:x="2503" fg:w="603"/><text x="80.8100%" y="655.50">glommio::executor::LocalExecut..</text></g><g><title>glommio::executor::LocalExecutor::run (600 samples, 19.31%)</title><rect x="80.6566%" y="629" width="19.3112%" height="15" fill="rgb(223,139,8)" fg:x="2506" fg:w="600"/><text x="80.9066%" y="639.50">glommio::executor::LocalExecut..</text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (600 samples, 19.31%)</title><rect x="80.6566%" y="613" width="19.3112%" height="15" fill="rgb(232,213,38)" fg:x="2506" fg:w="600"/><text x="80.9066%" y="623.50">scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>glommio::executor::LocalExecutor::run::_{{closure}} (600 samples, 19.31%)</title><rect x="80.6566%" y="597" width="19.3112%" height="15" fill="rgb(207,94,22)" fg:x="2506" fg:w="600"/><text x="80.9066%" y="607.50">glommio::executor::LocalExecut..</text></g><g><title>glommio::executor::LocalExecutor::run::_{{closure}} (600 samples, 19.31%)</title><rect x="80.6566%" y="581" width="19.3112%" height="15" fill="rgb(219,183,54)" fg:x="2506" fg:w="600"/><text x="80.9066%" y="591.50">glommio::executor::LocalExecut..</text></g><g><title>glommio::reactor::Reactor::spin_poll_io (525 samples, 16.90%)</title><rect x="83.0705%" y="565" width="16.8973%" height="15" fill="rgb(216,185,54)" fg:x="2581" fg:w="525"/><text x="83.3205%" y="575.50">glommio::reactor::Reactor:..</text></g><g><title>glommio::sys::uring::Reactor::poll_io (525 samples, 16.90%)</title><rect x="83.0705%" y="549" width="16.8973%" height="15" fill="rgb(254,217,39)" fg:x="2581" fg:w="525"/><text x="83.3205%" y="559.50">glommio::sys::uring::React..</text></g><g><title>glommio::sys::uring::UringCommon::poll (523 samples, 16.83%)</title><rect x="83.1349%" y="533" width="16.8330%" height="15" fill="rgb(240,178,23)" fg:x="2583" fg:w="523"/><text x="83.3849%" y="543.50">glommio::sys::uring::Uring..</text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (521 samples, 16.77%)</title><rect x="83.1992%" y="517" width="16.7686%" height="15" fill="rgb(218,11,47)" fg:x="2585" fg:w="521"/><text x="83.4492%" y="527.50">glommio::sys::uring::Uring..</text></g><g><title>glommio::sys::uring::UringCommon::consume_sqe_queue (521 samples, 16.77%)</title><rect x="83.1992%" y="501" width="16.7686%" height="15" fill="rgb(218,51,51)" fg:x="2585" fg:w="521"/><text x="83.4492%" y="511.50">glommio::sys::uring::Uring..</text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_sqes (517 samples, 16.64%)</title><rect x="83.3280%" y="485" width="16.6398%" height="15" fill="rgb(238,126,27)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="495.50">&lt;glommio::sys::uring::Slee..</text></g><g><title>glommio::iou::IoUring::submit_sqes (517 samples, 16.64%)</title><rect x="83.3280%" y="469" width="16.6398%" height="15" fill="rgb(249,202,22)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="479.50">glommio::iou::IoUring::sub..</text></g><g><title>glommio::iou::submission_queue::SubmissionQueue::submit (517 samples, 16.64%)</title><rect x="83.3280%" y="453" width="16.6398%" height="15" fill="rgb(254,195,49)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="463.50">glommio::iou::submission_q..</text></g><g><title>io_uring_submit (517 samples, 16.64%)</title><rect x="83.3280%" y="437" width="16.6398%" height="15" fill="rgb(208,123,14)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="447.50">io_uring_submit</text></g><g><title>__io_uring_submit_and_wait (517 samples, 16.64%)</title><rect x="83.3280%" y="421" width="16.6398%" height="15" fill="rgb(224,200,8)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="431.50">__io_uring_submit_and_wait</text></g><g><title>__io_uring_submit (517 samples, 16.64%)</title><rect x="83.3280%" y="405" width="16.6398%" height="15" fill="rgb(217,61,36)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="415.50">__io_uring_submit</text></g><g><title>__sys_io_uring_enter2 (517 samples, 16.64%)</title><rect x="83.3280%" y="389" width="16.6398%" height="15" fill="rgb(206,35,45)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="399.50">__sys_io_uring_enter2</text></g><g><title>syscall (517 samples, 16.64%)</title><rect x="83.3280%" y="373" width="16.6398%" height="15" fill="rgb(217,65,33)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="383.50">syscall</text></g><g><title>el0t_64_sync (517 samples, 16.64%)</title><rect x="83.3280%" y="357" width="16.6398%" height="15" fill="rgb(222,158,48)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="367.50">el0t_64_sync</text></g><g><title>el0t_64_sync_handler (517 samples, 16.64%)</title><rect x="83.3280%" y="341" width="16.6398%" height="15" fill="rgb(254,2,54)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="351.50">el0t_64_sync_handler</text></g><g><title>el0_svc (517 samples, 16.64%)</title><rect x="83.3280%" y="325" width="16.6398%" height="15" fill="rgb(250,143,38)" fg:x="2589" fg:w="517"/><text x="83.5780%" y="335.50">el0_svc</text></g><g><title>do_el0_svc (515 samples, 16.58%)</title><rect x="83.3923%" y="309" width="16.5755%" height="15" fill="rgb(248,25,0)" fg:x="2591" fg:w="515"/><text x="83.6423%" y="319.50">do_el0_svc</text></g><g><title>invoke_syscall.constprop.0 (515 samples, 16.58%)</title><rect x="83.3923%" y="293" width="16.5755%" height="15" fill="rgb(206,152,27)" fg:x="2591" fg:w="515"/><text x="83.6423%" y="303.50">invoke_syscall.constprop.0</text></g><g><title>__arm64_sys_io_uring_enter (515 samples, 16.58%)</title><rect x="83.3923%" y="277" width="16.5755%" height="15" fill="rgb(240,77,30)" fg:x="2591" fg:w="515"/><text x="83.6423%" y="287.50">__arm64_sys_io_uring_enter</text></g><g><title>io_submit_sqes (510 samples, 16.41%)</title><rect x="83.5533%" y="261" width="16.4145%" height="15" fill="rgb(231,5,3)" fg:x="2596" fg:w="510"/><text x="83.8033%" y="271.50">io_submit_sqes</text></g><g><title>io_queue_sqe_fallback (1 samples, 0.03%)</title><rect x="99.9356%" y="245" width="0.0322%" height="15" fill="rgb(207,226,32)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="255.50"></text></g><g><title>io_queue_iowq (1 samples, 0.03%)</title><rect x="99.9356%" y="229" width="0.0322%" height="15" fill="rgb(222,207,47)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="239.50"></text></g><g><title>io_wq_enqueue (1 samples, 0.03%)</title><rect x="99.9356%" y="213" width="0.0322%" height="15" fill="rgb(229,115,45)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="223.50"></text></g><g><title>create_io_worker (1 samples, 0.03%)</title><rect x="99.9356%" y="197" width="0.0322%" height="15" fill="rgb(224,191,6)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="207.50"></text></g><g><title>create_io_thread (1 samples, 0.03%)</title><rect x="99.9356%" y="181" width="0.0322%" height="15" fill="rgb(230,227,24)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="191.50"></text></g><g><title>copy_process (1 samples, 0.03%)</title><rect x="99.9356%" y="165" width="0.0322%" height="15" fill="rgb(228,80,19)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="175.50"></text></g><g><title>perf_event_init_task (1 samples, 0.03%)</title><rect x="99.9356%" y="149" width="0.0322%" height="15" fill="rgb(247,229,0)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="159.50"></text></g><g><title>inherit_task_group.isra.0 (1 samples, 0.03%)</title><rect x="99.9356%" y="133" width="0.0322%" height="15" fill="rgb(237,194,15)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="143.50"></text></g><g><title>inherit_event.isra.0 (1 samples, 0.03%)</title><rect x="99.9356%" y="117" width="0.0322%" height="15" fill="rgb(219,203,20)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="127.50"></text></g><g><title>perf_event_alloc (1 samples, 0.03%)</title><rect x="99.9356%" y="101" width="0.0322%" height="15" fill="rgb(234,128,8)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="111.50"></text></g><g><title>kmem_cache_alloc_node_noprof (1 samples, 0.03%)</title><rect x="99.9356%" y="85" width="0.0322%" height="15" fill="rgb(248,202,8)" fg:x="3105" fg:w="1"/><text x="100.1856%" y="95.50"></text></g><g><title>all (3,107 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(206,104,37)" fg:x="0" fg:w="3107"/><text x="0.2500%" y="895.50"></text></g><g><title>unnamed-1 (635 samples, 20.44%)</title><rect x="79.5623%" y="869" width="20.4377%" height="15" fill="rgb(223,8,27)" fg:x="2472" fg:w="635"/><text x="79.8123%" y="879.50">unnamed-1</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="99.9678%" y="853" width="0.0322%" height="15" fill="rgb(216,217,28)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="863.50"></text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::_{{closure}} (1 samples, 0.03%)</title><rect x="99.9678%" y="837" width="0.0322%" height="15" fill="rgb(249,199,1)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="847.50"></text></g><g><title>glommio::executor::LocalExecutor::new (1 samples, 0.03%)</title><rect x="99.9678%" y="821" width="0.0322%" height="15" fill="rgb(240,85,17)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="831.50"></text></g><g><title>glommio::reactor::Reactor::new (1 samples, 0.03%)</title><rect x="99.9678%" y="805" width="0.0322%" height="15" fill="rgb(206,108,45)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="815.50"></text></g><g><title>glommio::sys::uring::Reactor::new (1 samples, 0.03%)</title><rect x="99.9678%" y="789" width="0.0322%" height="15" fill="rgb(245,210,41)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="799.50"></text></g><g><title>glommio::sys::uring::SleepableRing::new (1 samples, 0.03%)</title><rect x="99.9678%" y="773" width="0.0322%" height="15" fill="rgb(206,13,37)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="783.50"></text></g><g><title>glommio::iou::IoUring::new (1 samples, 0.03%)</title><rect x="99.9678%" y="757" width="0.0322%" height="15" fill="rgb(250,61,18)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="767.50"></text></g><g><title>glommio::iou::IoUring::new_with_flags (1 samples, 0.03%)</title><rect x="99.9678%" y="741" width="0.0322%" height="15" fill="rgb(235,172,48)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="751.50"></text></g><g><title>io_uring_queue_init_params (1 samples, 0.03%)</title><rect x="99.9678%" y="725" width="0.0322%" height="15" fill="rgb(249,201,17)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="735.50"></text></g><g><title>__sys_io_uring_setup (1 samples, 0.03%)</title><rect x="99.9678%" y="709" width="0.0322%" height="15" fill="rgb(219,208,6)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="719.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="99.9678%" y="693" width="0.0322%" height="15" fill="rgb(248,31,23)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="703.50"></text></g><g><title>el0t_64_sync (1 samples, 0.03%)</title><rect x="99.9678%" y="677" width="0.0322%" height="15" fill="rgb(245,15,42)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="687.50"></text></g><g><title>el0t_64_sync_handler (1 samples, 0.03%)</title><rect x="99.9678%" y="661" width="0.0322%" height="15" fill="rgb(222,217,39)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="671.50"></text></g><g><title>el0_svc (1 samples, 0.03%)</title><rect x="99.9678%" y="645" width="0.0322%" height="15" fill="rgb(210,219,27)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="655.50"></text></g><g><title>do_el0_svc (1 samples, 0.03%)</title><rect x="99.9678%" y="629" width="0.0322%" height="15" fill="rgb(252,166,36)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="639.50"></text></g><g><title>invoke_syscall.constprop.0 (1 samples, 0.03%)</title><rect x="99.9678%" y="613" width="0.0322%" height="15" fill="rgb(245,132,34)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="623.50"></text></g><g><title>__arm64_sys_io_uring_setup (1 samples, 0.03%)</title><rect x="99.9678%" y="597" width="0.0322%" height="15" fill="rgb(236,54,3)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="607.50"></text></g><g><title>io_uring_setup (1 samples, 0.03%)</title><rect x="99.9678%" y="581" width="0.0322%" height="15" fill="rgb(241,173,43)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="591.50"></text></g><g><title>io_alloc_cache_init (1 samples, 0.03%)</title><rect x="99.9678%" y="565" width="0.0322%" height="15" fill="rgb(215,190,9)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="575.50"></text></g><g><title>__kvmalloc_node_noprof (1 samples, 0.03%)</title><rect x="99.9678%" y="549" width="0.0322%" height="15" fill="rgb(242,101,16)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="559.50"></text></g><g><title>__kmalloc_node_noprof (1 samples, 0.03%)</title><rect x="99.9678%" y="533" width="0.0322%" height="15" fill="rgb(223,190,21)" fg:x="3106" fg:w="1"/><text x="100.2178%" y="543.50"></text></g></svg></svg>